node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "global_step"
    }
  }
}
node {
  name: "global_step/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/Assign"
  op: "AssignVariableOp"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Switch"
  op: "Switch"
  input: "global_step/VarIsInitializedOp"
  input: "global_step/VarIsInitializedOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_t"
  op: "Identity"
  input: "global_step/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_f"
  op: "Identity"
  input: "global_step/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/pred_id"
  op: "Identity"
  input: "global_step/VarIsInitializedOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step/cond/Read/ReadVariableOp/Switch:1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/cond/Read/ReadVariableOp/Switch"
  op: "Switch"
  input: "global_step"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Identity"
  op: "Identity"
  input: "global_step/cond/Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Switch_1"
  op: "Switch"
  input: "global_step/Initializer/zeros"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Merge"
  op: "Merge"
  input: "global_step/cond/Switch_1"
  input: "global_step/cond/Identity"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "Add"
  input: "global_step/cond/Merge"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "input_pipeline_task0/Const"
  op: "Const"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 2
          }
        }
        string_val: "gs://victoratpl-gan-tpu/tfrecords/train-1-of-2.tfrecords"
        string_val: "gs://victoratpl-gan-tpu/tfrecords/train-2-of-2.tfrecords"
      }
    }
  }
}
node {
  name: "input_pipeline_task0/flat_filenames/shape"
  op: "Const"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "input_pipeline_task0/flat_filenames"
  op: "Reshape"
  input: "input_pipeline_task0/Const"
  input: "input_pipeline_task0/flat_filenames/shape"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "input_pipeline_task0/num_parallel_calls"
  op: "Const"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "input_pipeline_task0/count"
  op: "Const"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "input_pipeline_task0/buffer_size"
  op: "Const"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 10000
      }
    }
  }
}
node {
  name: "input_pipeline_task0/seed"
  op: "Const"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "input_pipeline_task0/seed2"
  op: "Const"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "input_pipeline_task0/batch_size"
  op: "Const"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 2048
      }
    }
  }
}
node {
  name: "input_pipeline_task0/drop_remainder"
  op: "Const"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "input_pipeline_task0/buffer_size_1"
  op: "Const"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: -1
      }
    }
  }
}
node {
  name: "input_pipeline_task0/OneShotIterator"
  op: "OneShotIterator"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dataset_factory"
    value {
      func {
        name: "_make_dataset_Y2kVwh2aTmE"
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "input_pipeline_task0/IteratorToStringHandle"
  op: "IteratorToStringHandle"
  input: "input_pipeline_task0/OneShotIterator"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "input_pipeline_task0/IteratorGetNext"
  op: "IteratorGetNext"
  input: "input_pipeline_task0/OneShotIterator"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "output_types"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "input_pipeline_task0/random_normal/shape"
  op: "Const"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\010\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "input_pipeline_task0/random_normal/mean"
  op: "Const"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "input_pipeline_task0/random_normal/stddev"
  op: "Const"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "input_pipeline_task0/random_normal/RandomStandardNormal"
  op: "RandomStandardNormal"
  input: "input_pipeline_task0/random_normal/shape"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "input_pipeline_task0/random_normal/mul"
  op: "Mul"
  input: "input_pipeline_task0/random_normal/RandomStandardNormal"
  input: "input_pipeline_task0/random_normal/stddev"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "input_pipeline_task0/random_normal"
  op: "Add"
  input: "input_pipeline_task0/random_normal/mul"
  input: "input_pipeline_task0/random_normal/mean"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2048
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "input_pipeline_task0/Const_1"
  op: "Const"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_pipeline_task0/random_normal"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "input_pipeline_task0/InfeedQueue/split/0/split_dim"
  op: "Const"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_pipeline_task0/random_normal"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "input_pipeline_task0/InfeedQueue/split/0"
  op: "Split"
  input: "input_pipeline_task0/InfeedQueue/split/0/split_dim"
  input: "input_pipeline_task0/random_normal"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_pipeline_task0/random_normal"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "input_pipeline_task0/Const_2"
  op: "Const"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_pipeline_task0/IteratorGetNext"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 8
      }
    }
  }
}
node {
  name: "input_pipeline_task0/InfeedQueue/split/1/split_dim"
  op: "Const"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_pipeline_task0/IteratorGetNext"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "input_pipeline_task0/InfeedQueue/split/1"
  op: "Split"
  input: "input_pipeline_task0/InfeedQueue/split/1/split_dim"
  input: "input_pipeline_task0/IteratorGetNext"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@input_pipeline_task0/IteratorGetNext"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 8
    }
  }
}
node {
  name: "input_pipeline_task0/InfeedQueue/enqueue/0"
  op: "InfeedEnqueueTuple"
  input: "input_pipeline_task0/InfeedQueue/split/0"
  input: "input_pipeline_task0/InfeedQueue/split/1"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "device_ordinal"
    value {
      i: 0
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "input_pipeline_task0/InfeedQueue/enqueue/1"
  op: "InfeedEnqueueTuple"
  input: "input_pipeline_task0/InfeedQueue/split/0:1"
  input: "input_pipeline_task0/InfeedQueue/split/1:1"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "device_ordinal"
    value {
      i: 1
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "input_pipeline_task0/InfeedQueue/enqueue/2"
  op: "InfeedEnqueueTuple"
  input: "input_pipeline_task0/InfeedQueue/split/0:2"
  input: "input_pipeline_task0/InfeedQueue/split/1:2"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "device_ordinal"
    value {
      i: 2
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "input_pipeline_task0/InfeedQueue/enqueue/3"
  op: "InfeedEnqueueTuple"
  input: "input_pipeline_task0/InfeedQueue/split/0:3"
  input: "input_pipeline_task0/InfeedQueue/split/1:3"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "device_ordinal"
    value {
      i: 3
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "input_pipeline_task0/InfeedQueue/enqueue/4"
  op: "InfeedEnqueueTuple"
  input: "input_pipeline_task0/InfeedQueue/split/0:4"
  input: "input_pipeline_task0/InfeedQueue/split/1:4"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "device_ordinal"
    value {
      i: 4
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "input_pipeline_task0/InfeedQueue/enqueue/5"
  op: "InfeedEnqueueTuple"
  input: "input_pipeline_task0/InfeedQueue/split/0:5"
  input: "input_pipeline_task0/InfeedQueue/split/1:5"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "device_ordinal"
    value {
      i: 5
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "input_pipeline_task0/InfeedQueue/enqueue/6"
  op: "InfeedEnqueueTuple"
  input: "input_pipeline_task0/InfeedQueue/split/0:6"
  input: "input_pipeline_task0/InfeedQueue/split/1:6"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "device_ordinal"
    value {
      i: 6
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "input_pipeline_task0/InfeedQueue/enqueue/7"
  op: "InfeedEnqueueTuple"
  input: "input_pipeline_task0/InfeedQueue/split/0:7"
  input: "input_pipeline_task0/InfeedQueue/split/1:7"
  device: "/job:tpu_worker/task:0/device:CPU:0"
  attr {
    key: "device_ordinal"
    value {
      i: 7
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "tpu_estimator/iterations_per_loop/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "tpu_estimator/iterations_per_loop"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "tpu_estimator/iterations_per_loop"
    }
  }
}
node {
  name: "tpu_estimator/iterations_per_loop/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "tpu_estimator/iterations_per_loop"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tpu_estimator/iterations_per_loop/Assign"
  op: "AssignVariableOp"
  input: "tpu_estimator/iterations_per_loop"
  input: "tpu_estimator/iterations_per_loop/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tpu_estimator/iterations_per_loop/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "tpu_estimator/iterations_per_loop"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cluster/pivot"
  op: "NoOp"
}
node {
  name: "TPUReplicateMetadata"
  op: "TPUReplicateMetadata"
  input: "^cluster/pivot"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "computation_shape"
    value {
      list {
      }
    }
  }
  attr {
    key: "device_assignment"
    value {
      list {
      }
    }
  }
  attr {
    key: "host_compute_core"
    value {
      list {
      }
    }
  }
  attr {
    key: "num_cores_per_replica"
    value {
      i: 1
    }
  }
  attr {
    key: "num_replicas"
    value {
      i: 8
    }
  }
  attr {
    key: "topology"
    value {
      s: ""
    }
  }
  attr {
    key: "use_tpu"
    value {
      b: true
    }
  }
}
node {
  name: "Const"
  op: "Const"
  input: "^TPUReplicateMetadata"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  input: "^TPUReplicateMetadata"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10000000.0
      }
    }
  }
}
node {
  name: "Enter"
  op: "Enter"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Enter_1"
  op: "Enter"
  input: "Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Merge"
  op: "Merge"
  input: "Enter"
  input: "NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Merge_1"
  op: "Merge"
  input: "Enter_1"
  input: "NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Less/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Less/ReadVariableOp/Enter"
  input: "^Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Less/ReadVariableOp/Enter"
  op: "Enter"
  input: "tpu_estimator/iterations_per_loop"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Less"
  op: "Less"
  input: "Merge"
  input: "Less/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "LoopCond"
  op: "LoopCond"
  input: "Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Switch"
  op: "Switch"
  input: "Merge"
  input: "LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Switch_1"
  op: "Switch"
  input: "Merge_1"
  input: "LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Identity"
  op: "Identity"
  input: "Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Identity_1"
  op: "Identity"
  input: "Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "add/y"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "Identity"
  input: "add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "InfeedQueue/dequeue"
  op: "InfeedDequeueTuple"
  input: "^Identity"
  device: "/device:TPU_REPLICATED_CORE:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "split/split_dim"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "split"
  op: "Split"
  input: "split/split_dim"
  input: "InfeedQueue/dequeue:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "split_1/split_dim"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "split_1"
  op: "Split"
  input: "split_1/split_dim"
  input: "InfeedQueue/dequeue"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "Generator/generator/g_fc1/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc1/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc1/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc1/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "Generator/generator/g_fc1/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Generator/generator/g_fc1/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "Generator/generator/g_fc1/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "Generator/generator/g_fc1/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc1/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "Generator/generator/g_fc1/kernel/Initializer/truncated_normal/mul"
  input: "Generator/generator/g_fc1/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Generator/generator/g_fc1/kernel"
    }
  }
}
node {
  name: "Generator/generator/g_fc1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc1/kernel/Assign"
  op: "AssignVariableOp"
  input: "Generator/generator/g_fc1/kernel"
  input: "Generator/generator/g_fc1/kernel/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator/generator/g_fc1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Generator/generator/g_fc1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator/generator/g_fc1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Generator/generator/g_fc1/bias"
    }
  }
}
node {
  name: "Generator/generator/g_fc1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc1/bias/Assign"
  op: "AssignVariableOp"
  input: "Generator/generator/g_fc1/bias"
  input: "Generator/generator/g_fc1/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator/generator/g_fc1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Generator/generator/g_fc1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator/generator/g_fc1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Generator/generator/g_fc1/MatMul/ReadVariableOp/Enter"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator/generator/g_fc1/MatMul/ReadVariableOp/Enter"
  op: "Enter"
  input: "Generator/generator/g_fc1/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Generator/generator/g_fc1/MatMul"
  op: "MatMul"
  input: "split_1"
  input: "Generator/generator/g_fc1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Generator/generator/g_fc1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Generator/generator/g_fc1/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator/generator/g_fc1/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "Generator/generator/g_fc1/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Generator/generator/g_fc1/BiasAdd"
  op: "BiasAdd"
  input: "Generator/generator/g_fc1/MatMul"
  input: "Generator/generator/g_fc1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Generator/generator/dropout/dropout/rate"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "Generator/generator/dropout/dropout/Shape"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Generator/generator/dropout/dropout/sub/x"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Generator/generator/dropout/dropout/sub"
  op: "Sub"
  input: "Generator/generator/dropout/dropout/sub/x"
  input: "Generator/generator/dropout/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Generator/generator/dropout/dropout/random_uniform/min"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/generator/dropout/dropout/random_uniform/max"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Generator/generator/dropout/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Generator/generator/dropout/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Generator/generator/dropout/dropout/random_uniform/sub"
  op: "Sub"
  input: "Generator/generator/dropout/dropout/random_uniform/max"
  input: "Generator/generator/dropout/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Generator/generator/dropout/dropout/random_uniform/mul"
  op: "Mul"
  input: "Generator/generator/dropout/dropout/random_uniform/RandomUniform"
  input: "Generator/generator/dropout/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Generator/generator/dropout/dropout/random_uniform"
  op: "Add"
  input: "Generator/generator/dropout/dropout/random_uniform/mul"
  input: "Generator/generator/dropout/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Generator/generator/dropout/dropout/add"
  op: "Add"
  input: "Generator/generator/dropout/dropout/sub"
  input: "Generator/generator/dropout/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Generator/generator/dropout/dropout/Floor"
  op: "Floor"
  input: "Generator/generator/dropout/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Generator/generator/dropout/dropout/truediv"
  op: "RealDiv"
  input: "Generator/generator/g_fc1/BiasAdd"
  input: "Generator/generator/dropout/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Generator/generator/dropout/dropout/mul"
  op: "Mul"
  input: "Generator/generator/dropout/dropout/truediv"
  input: "Generator/generator/dropout/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Generator/generator/Tanh"
  op: "Tanh"
  input: "Generator/generator/dropout/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Generator/generator/g_fc2/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc2/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc2/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc2/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "Generator/generator/g_fc2/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Generator/generator/g_fc2/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "Generator/generator/g_fc2/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "Generator/generator/g_fc2/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc2/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "Generator/generator/g_fc2/kernel/Initializer/truncated_normal/mul"
  input: "Generator/generator/g_fc2/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 3072
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Generator/generator/g_fc2/kernel"
    }
  }
}
node {
  name: "Generator/generator/g_fc2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc2/kernel/Assign"
  op: "AssignVariableOp"
  input: "Generator/generator/g_fc2/kernel"
  input: "Generator/generator/g_fc2/kernel/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator/generator/g_fc2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Generator/generator/g_fc2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator/generator/g_fc2/bias/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3072
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc2/bias/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc2/bias/Initializer/zeros"
  op: "Fill"
  input: "Generator/generator/g_fc2/bias/Initializer/zeros/shape_as_tensor"
  input: "Generator/generator/g_fc2/bias/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Generator/generator/g_fc2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3072
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Generator/generator/g_fc2/bias"
    }
  }
}
node {
  name: "Generator/generator/g_fc2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc2/bias/Assign"
  op: "AssignVariableOp"
  input: "Generator/generator/g_fc2/bias"
  input: "Generator/generator/g_fc2/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator/generator/g_fc2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Generator/generator/g_fc2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator/generator/g_fc2/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Generator/generator/g_fc2/MatMul/ReadVariableOp/Enter"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator/generator/g_fc2/MatMul/ReadVariableOp/Enter"
  op: "Enter"
  input: "Generator/generator/g_fc2/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Generator/generator/g_fc2/MatMul"
  op: "MatMul"
  input: "Generator/generator/Tanh"
  input: "Generator/generator/g_fc2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Generator/generator/g_fc2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Generator/generator/g_fc2/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator/generator/g_fc2/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "Generator/generator/g_fc2/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Generator/generator/g_fc2/BiasAdd"
  op: "BiasAdd"
  input: "Generator/generator/g_fc2/MatMul"
  input: "Generator/generator/g_fc2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Generator/generator/Reshape/shape"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000 \000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Generator/generator/Reshape"
  op: "Reshape"
  input: "Generator/generator/g_fc2/BiasAdd"
  input: "Generator/generator/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Generator/generator/Tanh_1"
  op: "Tanh"
  input: "Generator/generator/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator/discriminator/flatten/Reshape/shape"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/flatten/Reshape"
  op: "Reshape"
  input: "Generator/generator/Tanh_1"
  input: "Discriminator/discriminator/flatten/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\014\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "Discriminator/discriminator/d_fc1/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "Discriminator/discriminator/d_fc1/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "Discriminator/discriminator/d_fc1/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "Discriminator/discriminator/d_fc1/kernel/Initializer/truncated_normal/mul"
  input: "Discriminator/discriminator/d_fc1/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3072
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Discriminator/discriminator/d_fc1/kernel"
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/kernel/Assign"
  op: "AssignVariableOp"
  input: "Discriminator/discriminator/d_fc1/kernel"
  input: "Discriminator/discriminator/d_fc1/kernel/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Discriminator/discriminator/d_fc1/bias"
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/bias/Assign"
  op: "AssignVariableOp"
  input: "Discriminator/discriminator/d_fc1/bias"
  input: "Discriminator/discriminator/d_fc1/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc1/MatMul/ReadVariableOp/Enter"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/MatMul/ReadVariableOp/Enter"
  op: "Enter"
  input: "Discriminator/discriminator/d_fc1/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/MatMul"
  op: "MatMul"
  input: "Discriminator/discriminator/flatten/Reshape"
  input: "Discriminator/discriminator/d_fc1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc1/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "Discriminator/discriminator/d_fc1/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/BiasAdd"
  op: "BiasAdd"
  input: "Discriminator/discriminator/d_fc1/MatMul"
  input: "Discriminator/discriminator/d_fc1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Discriminator/discriminator/dropout/dropout/rate"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/dropout/dropout/Shape"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/dropout/dropout/sub/x"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/dropout/dropout/sub"
  op: "Sub"
  input: "Discriminator/discriminator/dropout/dropout/sub/x"
  input: "Discriminator/discriminator/dropout/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator/discriminator/dropout/dropout/random_uniform/min"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/dropout/dropout/random_uniform/max"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/dropout/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Discriminator/discriminator/dropout/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Discriminator/discriminator/dropout/dropout/random_uniform/sub"
  op: "Sub"
  input: "Discriminator/discriminator/dropout/dropout/random_uniform/max"
  input: "Discriminator/discriminator/dropout/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator/discriminator/dropout/dropout/random_uniform/mul"
  op: "Mul"
  input: "Discriminator/discriminator/dropout/dropout/random_uniform/RandomUniform"
  input: "Discriminator/discriminator/dropout/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator/discriminator/dropout/dropout/random_uniform"
  op: "Add"
  input: "Discriminator/discriminator/dropout/dropout/random_uniform/mul"
  input: "Discriminator/discriminator/dropout/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator/discriminator/dropout/dropout/add"
  op: "Add"
  input: "Discriminator/discriminator/dropout/dropout/sub"
  input: "Discriminator/discriminator/dropout/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator/discriminator/dropout/dropout/Floor"
  op: "Floor"
  input: "Discriminator/discriminator/dropout/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator/discriminator/dropout/dropout/truediv"
  op: "RealDiv"
  input: "Discriminator/discriminator/d_fc1/BiasAdd"
  input: "Discriminator/discriminator/dropout/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator/discriminator/dropout/dropout/mul"
  op: "Mul"
  input: "Discriminator/discriminator/dropout/dropout/truediv"
  input: "Discriminator/discriminator/dropout/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator/discriminator/Tanh"
  op: "Tanh"
  input: "Discriminator/discriminator/dropout/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/kernel/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/kernel/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/kernel/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.019999999552965164
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/kernel/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "Discriminator/discriminator/d_fc2/kernel/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/kernel/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "Discriminator/discriminator/d_fc2/kernel/Initializer/truncated_normal/TruncatedNormal"
  input: "Discriminator/discriminator/d_fc2/kernel/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/kernel/Initializer/truncated_normal"
  op: "Add"
  input: "Discriminator/discriminator/d_fc2/kernel/Initializer/truncated_normal/mul"
  input: "Discriminator/discriminator/d_fc2/kernel/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/kernel"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Discriminator/discriminator/d_fc2/kernel"
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/kernel/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/kernel/Assign"
  op: "AssignVariableOp"
  input: "Discriminator/discriminator/d_fc2/kernel"
  input: "Discriminator/discriminator/d_fc2/kernel/Initializer/truncated_normal"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/kernel/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Discriminator/discriminator/d_fc2/bias"
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/bias/Assign"
  op: "AssignVariableOp"
  input: "Discriminator/discriminator/d_fc2/bias"
  input: "Discriminator/discriminator/d_fc2/bias/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc2/MatMul/ReadVariableOp/Enter"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/MatMul/ReadVariableOp/Enter"
  op: "Enter"
  input: "Discriminator/discriminator/d_fc2/kernel"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/MatMul"
  op: "MatMul"
  input: "Discriminator/discriminator/Tanh"
  input: "Discriminator/discriminator/d_fc2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc2/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/BiasAdd/ReadVariableOp/Enter"
  op: "Enter"
  input: "Discriminator/discriminator/d_fc2/bias"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/BiasAdd"
  op: "BiasAdd"
  input: "Discriminator/discriminator/d_fc2/MatMul"
  input: "Discriminator/discriminator/d_fc2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Discriminator_1/discriminator/flatten/Reshape/shape"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "Discriminator_1/discriminator/flatten/Reshape"
  op: "Reshape"
  input: "split"
  input: "Discriminator_1/discriminator/flatten/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_1/discriminator/d_fc1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc1/MatMul/ReadVariableOp/Enter"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator_1/discriminator/d_fc1/MatMul"
  op: "MatMul"
  input: "Discriminator_1/discriminator/flatten/Reshape"
  input: "Discriminator_1/discriminator/d_fc1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Discriminator_1/discriminator/d_fc1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc1/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator_1/discriminator/d_fc1/BiasAdd"
  op: "BiasAdd"
  input: "Discriminator_1/discriminator/d_fc1/MatMul"
  input: "Discriminator_1/discriminator/d_fc1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Discriminator_1/discriminator/dropout/dropout/rate"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "Discriminator_1/discriminator/dropout/dropout/Shape"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Discriminator_1/discriminator/dropout/dropout/sub/x"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Discriminator_1/discriminator/dropout/dropout/sub"
  op: "Sub"
  input: "Discriminator_1/discriminator/dropout/dropout/sub/x"
  input: "Discriminator_1/discriminator/dropout/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_1/discriminator/dropout/dropout/random_uniform/min"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Discriminator_1/discriminator/dropout/dropout/random_uniform/max"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Discriminator_1/discriminator/dropout/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Discriminator_1/discriminator/dropout/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Discriminator_1/discriminator/dropout/dropout/random_uniform/sub"
  op: "Sub"
  input: "Discriminator_1/discriminator/dropout/dropout/random_uniform/max"
  input: "Discriminator_1/discriminator/dropout/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_1/discriminator/dropout/dropout/random_uniform/mul"
  op: "Mul"
  input: "Discriminator_1/discriminator/dropout/dropout/random_uniform/RandomUniform"
  input: "Discriminator_1/discriminator/dropout/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_1/discriminator/dropout/dropout/random_uniform"
  op: "Add"
  input: "Discriminator_1/discriminator/dropout/dropout/random_uniform/mul"
  input: "Discriminator_1/discriminator/dropout/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_1/discriminator/dropout/dropout/add"
  op: "Add"
  input: "Discriminator_1/discriminator/dropout/dropout/sub"
  input: "Discriminator_1/discriminator/dropout/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_1/discriminator/dropout/dropout/Floor"
  op: "Floor"
  input: "Discriminator_1/discriminator/dropout/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_1/discriminator/dropout/dropout/truediv"
  op: "RealDiv"
  input: "Discriminator_1/discriminator/d_fc1/BiasAdd"
  input: "Discriminator_1/discriminator/dropout/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_1/discriminator/dropout/dropout/mul"
  op: "Mul"
  input: "Discriminator_1/discriminator/dropout/dropout/truediv"
  input: "Discriminator_1/discriminator/dropout/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_1/discriminator/Tanh"
  op: "Tanh"
  input: "Discriminator_1/discriminator/dropout/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_1/discriminator/d_fc2/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc2/MatMul/ReadVariableOp/Enter"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator_1/discriminator/d_fc2/MatMul"
  op: "MatMul"
  input: "Discriminator_1/discriminator/Tanh"
  input: "Discriminator_1/discriminator/d_fc2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Discriminator_1/discriminator/d_fc2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc2/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator_1/discriminator/d_fc2/BiasAdd"
  op: "BiasAdd"
  input: "Discriminator_1/discriminator/d_fc2/MatMul"
  input: "Discriminator_1/discriminator/d_fc2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Generator_1/generator/g_fc1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Generator/generator/g_fc1/MatMul/ReadVariableOp/Enter"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator_1/generator/g_fc1/MatMul"
  op: "MatMul"
  input: "split_1:1"
  input: "Generator_1/generator/g_fc1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Generator_1/generator/g_fc1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Generator/generator/g_fc1/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator_1/generator/g_fc1/BiasAdd"
  op: "BiasAdd"
  input: "Generator_1/generator/g_fc1/MatMul"
  input: "Generator_1/generator/g_fc1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Generator_1/generator/dropout/dropout/rate"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "Generator_1/generator/dropout/dropout/Shape"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Generator_1/generator/dropout/dropout/sub/x"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Generator_1/generator/dropout/dropout/sub"
  op: "Sub"
  input: "Generator_1/generator/dropout/dropout/sub/x"
  input: "Generator_1/generator/dropout/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Generator_1/generator/dropout/dropout/random_uniform/min"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator_1/generator/dropout/dropout/random_uniform/max"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Generator_1/generator/dropout/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Generator_1/generator/dropout/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Generator_1/generator/dropout/dropout/random_uniform/sub"
  op: "Sub"
  input: "Generator_1/generator/dropout/dropout/random_uniform/max"
  input: "Generator_1/generator/dropout/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Generator_1/generator/dropout/dropout/random_uniform/mul"
  op: "Mul"
  input: "Generator_1/generator/dropout/dropout/random_uniform/RandomUniform"
  input: "Generator_1/generator/dropout/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Generator_1/generator/dropout/dropout/random_uniform"
  op: "Add"
  input: "Generator_1/generator/dropout/dropout/random_uniform/mul"
  input: "Generator_1/generator/dropout/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Generator_1/generator/dropout/dropout/add"
  op: "Add"
  input: "Generator_1/generator/dropout/dropout/sub"
  input: "Generator_1/generator/dropout/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Generator_1/generator/dropout/dropout/Floor"
  op: "Floor"
  input: "Generator_1/generator/dropout/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Generator_1/generator/dropout/dropout/truediv"
  op: "RealDiv"
  input: "Generator_1/generator/g_fc1/BiasAdd"
  input: "Generator_1/generator/dropout/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Generator_1/generator/dropout/dropout/mul"
  op: "Mul"
  input: "Generator_1/generator/dropout/dropout/truediv"
  input: "Generator_1/generator/dropout/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Generator_1/generator/Tanh"
  op: "Tanh"
  input: "Generator_1/generator/dropout/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Generator_1/generator/g_fc2/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Generator/generator/g_fc2/MatMul/ReadVariableOp/Enter"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator_1/generator/g_fc2/MatMul"
  op: "MatMul"
  input: "Generator_1/generator/Tanh"
  input: "Generator_1/generator/g_fc2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Generator_1/generator/g_fc2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Generator/generator/g_fc2/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator_1/generator/g_fc2/BiasAdd"
  op: "BiasAdd"
  input: "Generator_1/generator/g_fc2/MatMul"
  input: "Generator_1/generator/g_fc2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Generator_1/generator/Reshape/shape"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\377 \000\000\000 \000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "Generator_1/generator/Reshape"
  op: "Reshape"
  input: "Generator_1/generator/g_fc2/BiasAdd"
  input: "Generator_1/generator/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Generator_1/generator/Tanh_1"
  op: "Tanh"
  input: "Generator_1/generator/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_2/discriminator/flatten/Reshape/shape"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "Discriminator_2/discriminator/flatten/Reshape"
  op: "Reshape"
  input: "Generator_1/generator/Tanh_1"
  input: "Discriminator_2/discriminator/flatten/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_2/discriminator/d_fc1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc1/MatMul/ReadVariableOp/Enter"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator_2/discriminator/d_fc1/MatMul"
  op: "MatMul"
  input: "Discriminator_2/discriminator/flatten/Reshape"
  input: "Discriminator_2/discriminator/d_fc1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Discriminator_2/discriminator/d_fc1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc1/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator_2/discriminator/d_fc1/BiasAdd"
  op: "BiasAdd"
  input: "Discriminator_2/discriminator/d_fc1/MatMul"
  input: "Discriminator_2/discriminator/d_fc1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Discriminator_2/discriminator/dropout/dropout/rate"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "Discriminator_2/discriminator/dropout/dropout/Shape"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Discriminator_2/discriminator/dropout/dropout/sub/x"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Discriminator_2/discriminator/dropout/dropout/sub"
  op: "Sub"
  input: "Discriminator_2/discriminator/dropout/dropout/sub/x"
  input: "Discriminator_2/discriminator/dropout/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_2/discriminator/dropout/dropout/random_uniform/min"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Discriminator_2/discriminator/dropout/dropout/random_uniform/max"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Discriminator_2/discriminator/dropout/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Discriminator_2/discriminator/dropout/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Discriminator_2/discriminator/dropout/dropout/random_uniform/sub"
  op: "Sub"
  input: "Discriminator_2/discriminator/dropout/dropout/random_uniform/max"
  input: "Discriminator_2/discriminator/dropout/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_2/discriminator/dropout/dropout/random_uniform/mul"
  op: "Mul"
  input: "Discriminator_2/discriminator/dropout/dropout/random_uniform/RandomUniform"
  input: "Discriminator_2/discriminator/dropout/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_2/discriminator/dropout/dropout/random_uniform"
  op: "Add"
  input: "Discriminator_2/discriminator/dropout/dropout/random_uniform/mul"
  input: "Discriminator_2/discriminator/dropout/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_2/discriminator/dropout/dropout/add"
  op: "Add"
  input: "Discriminator_2/discriminator/dropout/dropout/sub"
  input: "Discriminator_2/discriminator/dropout/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_2/discriminator/dropout/dropout/Floor"
  op: "Floor"
  input: "Discriminator_2/discriminator/dropout/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_2/discriminator/dropout/dropout/truediv"
  op: "RealDiv"
  input: "Discriminator_2/discriminator/d_fc1/BiasAdd"
  input: "Discriminator_2/discriminator/dropout/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_2/discriminator/dropout/dropout/mul"
  op: "Mul"
  input: "Discriminator_2/discriminator/dropout/dropout/truediv"
  input: "Discriminator_2/discriminator/dropout/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_2/discriminator/Tanh"
  op: "Tanh"
  input: "Discriminator_2/discriminator/dropout/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_2/discriminator/d_fc2/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc2/MatMul/ReadVariableOp/Enter"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator_2/discriminator/d_fc2/MatMul"
  op: "MatMul"
  input: "Discriminator_2/discriminator/Tanh"
  input: "Discriminator_2/discriminator/d_fc2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Discriminator_2/discriminator/d_fc2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc2/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator_2/discriminator/d_fc2/BiasAdd"
  op: "BiasAdd"
  input: "Discriminator_2/discriminator/d_fc2/MatMul"
  input: "Discriminator_2/discriminator/d_fc2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Discriminator_3/discriminator/flatten/Reshape/shape"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "Discriminator_3/discriminator/flatten/Reshape"
  op: "Reshape"
  input: "split:1"
  input: "Discriminator_3/discriminator/flatten/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_3/discriminator/d_fc1/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc1/MatMul/ReadVariableOp/Enter"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator_3/discriminator/d_fc1/MatMul"
  op: "MatMul"
  input: "Discriminator_3/discriminator/flatten/Reshape"
  input: "Discriminator_3/discriminator/d_fc1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Discriminator_3/discriminator/d_fc1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc1/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator_3/discriminator/d_fc1/BiasAdd"
  op: "BiasAdd"
  input: "Discriminator_3/discriminator/d_fc1/MatMul"
  input: "Discriminator_3/discriminator/d_fc1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Discriminator_3/discriminator/dropout/dropout/rate"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "Discriminator_3/discriminator/dropout/dropout/Shape"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Discriminator_3/discriminator/dropout/dropout/sub/x"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Discriminator_3/discriminator/dropout/dropout/sub"
  op: "Sub"
  input: "Discriminator_3/discriminator/dropout/dropout/sub/x"
  input: "Discriminator_3/discriminator/dropout/dropout/rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_3/discriminator/dropout/dropout/random_uniform/min"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Discriminator_3/discriminator/dropout/dropout/random_uniform/max"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "Discriminator_3/discriminator/dropout/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Discriminator_3/discriminator/dropout/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "Discriminator_3/discriminator/dropout/dropout/random_uniform/sub"
  op: "Sub"
  input: "Discriminator_3/discriminator/dropout/dropout/random_uniform/max"
  input: "Discriminator_3/discriminator/dropout/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_3/discriminator/dropout/dropout/random_uniform/mul"
  op: "Mul"
  input: "Discriminator_3/discriminator/dropout/dropout/random_uniform/RandomUniform"
  input: "Discriminator_3/discriminator/dropout/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_3/discriminator/dropout/dropout/random_uniform"
  op: "Add"
  input: "Discriminator_3/discriminator/dropout/dropout/random_uniform/mul"
  input: "Discriminator_3/discriminator/dropout/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_3/discriminator/dropout/dropout/add"
  op: "Add"
  input: "Discriminator_3/discriminator/dropout/dropout/sub"
  input: "Discriminator_3/discriminator/dropout/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_3/discriminator/dropout/dropout/Floor"
  op: "Floor"
  input: "Discriminator_3/discriminator/dropout/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_3/discriminator/dropout/dropout/truediv"
  op: "RealDiv"
  input: "Discriminator_3/discriminator/d_fc1/BiasAdd"
  input: "Discriminator_3/discriminator/dropout/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_3/discriminator/dropout/dropout/mul"
  op: "Mul"
  input: "Discriminator_3/discriminator/dropout/dropout/truediv"
  input: "Discriminator_3/discriminator/dropout/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_3/discriminator/Tanh"
  op: "Tanh"
  input: "Discriminator_3/discriminator/dropout/dropout/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Discriminator_3/discriminator/d_fc2/MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc2/MatMul/ReadVariableOp/Enter"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator_3/discriminator/d_fc2/MatMul"
  op: "MatMul"
  input: "Discriminator_3/discriminator/Tanh"
  input: "Discriminator_3/discriminator/d_fc2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Discriminator_3/discriminator/d_fc2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc2/BiasAdd/ReadVariableOp/Enter"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator_3/discriminator/d_fc2/BiasAdd"
  op: "BiasAdd"
  input: "Discriminator_3/discriminator/d_fc2/MatMul"
  input: "Discriminator_3/discriminator/d_fc2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "generator_modified_loss/ones_like/Shape"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator_modified_loss/ones_like/Const"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator_modified_loss/ones_like"
  op: "Fill"
  input: "generator_modified_loss/ones_like/Shape"
  input: "generator_modified_loss/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_modified_loss/xentropy/zeros_like"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator_modified_loss/xentropy/GreaterEqual"
  op: "GreaterEqual"
  input: "Discriminator/discriminator/d_fc2/BiasAdd"
  input: "generator_modified_loss/xentropy/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss/xentropy/Select"
  op: "Select"
  input: "generator_modified_loss/xentropy/GreaterEqual"
  input: "Discriminator/discriminator/d_fc2/BiasAdd"
  input: "generator_modified_loss/xentropy/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss/xentropy/Neg"
  op: "Neg"
  input: "Discriminator/discriminator/d_fc2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss/xentropy/Select_1"
  op: "Select"
  input: "generator_modified_loss/xentropy/GreaterEqual"
  input: "generator_modified_loss/xentropy/Neg"
  input: "Discriminator/discriminator/d_fc2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss/xentropy/mul"
  op: "Mul"
  input: "Discriminator/discriminator/d_fc2/BiasAdd"
  input: "generator_modified_loss/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss/xentropy/sub"
  op: "Sub"
  input: "generator_modified_loss/xentropy/Select"
  input: "generator_modified_loss/xentropy/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss/xentropy/Exp"
  op: "Exp"
  input: "generator_modified_loss/xentropy/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss/xentropy/Log1p"
  op: "Log1p"
  input: "generator_modified_loss/xentropy/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss/xentropy"
  op: "Add"
  input: "generator_modified_loss/xentropy/sub"
  input: "generator_modified_loss/xentropy/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss/assert_broadcastable/weights"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator_modified_loss/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_modified_loss/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_modified_loss/assert_broadcastable/values/shape"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator_modified_loss/assert_broadcastable/values/rank"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator_modified_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^Identity"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss/ToFloat/x"
  op: "Const"
  input: "^generator_modified_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator_modified_loss/Mul"
  op: "Mul"
  input: "generator_modified_loss/xentropy"
  input: "generator_modified_loss/ToFloat/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss/Const"
  op: "Const"
  input: "^generator_modified_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator_modified_loss/Sum"
  op: "Sum"
  input: "generator_modified_loss/Mul"
  input: "generator_modified_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_modified_loss/num_present/Equal/y"
  op: "Const"
  input: "^generator_modified_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator_modified_loss/num_present/Equal"
  op: "Equal"
  input: "generator_modified_loss/ToFloat/x"
  input: "generator_modified_loss/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss/num_present/zeros_like"
  op: "Const"
  input: "^generator_modified_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator_modified_loss/num_present/ones_like/Shape"
  op: "Const"
  input: "^generator_modified_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_modified_loss/num_present/ones_like/Const"
  op: "Const"
  input: "^generator_modified_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator_modified_loss/num_present/ones_like"
  op: "Fill"
  input: "generator_modified_loss/num_present/ones_like/Shape"
  input: "generator_modified_loss/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_modified_loss/num_present/Select"
  op: "Select"
  input: "generator_modified_loss/num_present/Equal"
  input: "generator_modified_loss/num_present/zeros_like"
  input: "generator_modified_loss/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^generator_modified_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_modified_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^generator_modified_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_modified_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Const"
  input: "^generator_modified_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator_modified_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^generator_modified_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator_modified_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^generator_modified_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss/num_present/broadcast_weights/ones_like/Shape"
  op: "Const"
  input: "^generator_modified_loss/assert_broadcastable/static_scalar_check_success"
  input: "^generator_modified_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator_modified_loss/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^generator_modified_loss/assert_broadcastable/static_scalar_check_success"
  input: "^generator_modified_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator_modified_loss/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "generator_modified_loss/num_present/broadcast_weights/ones_like/Shape"
  input: "generator_modified_loss/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_modified_loss/num_present/broadcast_weights"
  op: "Mul"
  input: "generator_modified_loss/num_present/Select"
  input: "generator_modified_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss/num_present/Const"
  op: "Const"
  input: "^generator_modified_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator_modified_loss/num_present"
  op: "Sum"
  input: "generator_modified_loss/num_present/broadcast_weights"
  input: "generator_modified_loss/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_modified_loss/Const_1"
  op: "Const"
  input: "^generator_modified_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_modified_loss/Sum_1"
  op: "Sum"
  input: "generator_modified_loss/Sum"
  input: "generator_modified_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_modified_loss/value"
  op: "DivNoNan"
  input: "generator_modified_loss/Sum_1"
  input: "generator_modified_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/ones_like/Shape"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/ones_like/Const"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/ones_like"
  op: "Fill"
  input: "discriminator_modified_loss/ones_like/Shape"
  input: "discriminator_modified_loss/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_modified_loss/mul/y"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.75
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/mul"
  op: "Mul"
  input: "discriminator_modified_loss/ones_like"
  input: "discriminator_modified_loss/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/add/y"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/add"
  op: "Add"
  input: "discriminator_modified_loss/mul"
  input: "discriminator_modified_loss/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/xentropy/zeros_like"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/xentropy/GreaterEqual"
  op: "GreaterEqual"
  input: "Discriminator_1/discriminator/d_fc2/BiasAdd"
  input: "discriminator_modified_loss/xentropy/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/xentropy/Select"
  op: "Select"
  input: "discriminator_modified_loss/xentropy/GreaterEqual"
  input: "Discriminator_1/discriminator/d_fc2/BiasAdd"
  input: "discriminator_modified_loss/xentropy/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/xentropy/Neg"
  op: "Neg"
  input: "Discriminator_1/discriminator/d_fc2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/xentropy/Select_1"
  op: "Select"
  input: "discriminator_modified_loss/xentropy/GreaterEqual"
  input: "discriminator_modified_loss/xentropy/Neg"
  input: "Discriminator_1/discriminator/d_fc2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/xentropy/mul"
  op: "Mul"
  input: "Discriminator_1/discriminator/d_fc2/BiasAdd"
  input: "discriminator_modified_loss/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/xentropy/sub"
  op: "Sub"
  input: "discriminator_modified_loss/xentropy/Select"
  input: "discriminator_modified_loss/xentropy/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/xentropy/Exp"
  op: "Exp"
  input: "discriminator_modified_loss/xentropy/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/xentropy/Log1p"
  op: "Log1p"
  input: "discriminator_modified_loss/xentropy/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/xentropy"
  op: "Add"
  input: "discriminator_modified_loss/xentropy/sub"
  input: "discriminator_modified_loss/xentropy/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/assert_broadcastable/weights"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/assert_broadcastable/values/shape"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/assert_broadcastable/values/rank"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^Identity"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/ToFloat/x"
  op: "Const"
  input: "^discriminator_modified_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/Mul_1"
  op: "Mul"
  input: "discriminator_modified_loss/xentropy"
  input: "discriminator_modified_loss/ToFloat/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/Const"
  op: "Const"
  input: "^discriminator_modified_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/Sum"
  op: "Sum"
  input: "discriminator_modified_loss/Mul_1"
  input: "discriminator_modified_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present/Equal/y"
  op: "Const"
  input: "^discriminator_modified_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present/Equal"
  op: "Equal"
  input: "discriminator_modified_loss/ToFloat/x"
  input: "discriminator_modified_loss/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present/zeros_like"
  op: "Const"
  input: "^discriminator_modified_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present/ones_like/Shape"
  op: "Const"
  input: "^discriminator_modified_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present/ones_like/Const"
  op: "Const"
  input: "^discriminator_modified_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present/ones_like"
  op: "Fill"
  input: "discriminator_modified_loss/num_present/ones_like/Shape"
  input: "discriminator_modified_loss/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present/Select"
  op: "Select"
  input: "discriminator_modified_loss/num_present/Equal"
  input: "discriminator_modified_loss/num_present/zeros_like"
  input: "discriminator_modified_loss/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^discriminator_modified_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^discriminator_modified_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Const"
  input: "^discriminator_modified_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^discriminator_modified_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^discriminator_modified_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present/broadcast_weights/ones_like/Shape"
  op: "Const"
  input: "^discriminator_modified_loss/assert_broadcastable/static_scalar_check_success"
  input: "^discriminator_modified_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^discriminator_modified_loss/assert_broadcastable/static_scalar_check_success"
  input: "^discriminator_modified_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "discriminator_modified_loss/num_present/broadcast_weights/ones_like/Shape"
  input: "discriminator_modified_loss/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present/broadcast_weights"
  op: "Mul"
  input: "discriminator_modified_loss/num_present/Select"
  input: "discriminator_modified_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present/Const"
  op: "Const"
  input: "^discriminator_modified_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present"
  op: "Sum"
  input: "discriminator_modified_loss/num_present/broadcast_weights"
  input: "discriminator_modified_loss/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_modified_loss/Const_1"
  op: "Const"
  input: "^discriminator_modified_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/Sum_1"
  op: "Sum"
  input: "discriminator_modified_loss/Sum"
  input: "discriminator_modified_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_modified_loss/value"
  op: "DivNoNan"
  input: "discriminator_modified_loss/Sum_1"
  input: "discriminator_modified_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/zeros_like"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/xentropy_1/zeros_like"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/xentropy_1/GreaterEqual"
  op: "GreaterEqual"
  input: "Discriminator/discriminator/d_fc2/BiasAdd"
  input: "discriminator_modified_loss/xentropy_1/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/xentropy_1/Select"
  op: "Select"
  input: "discriminator_modified_loss/xentropy_1/GreaterEqual"
  input: "Discriminator/discriminator/d_fc2/BiasAdd"
  input: "discriminator_modified_loss/xentropy_1/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/xentropy_1/Neg"
  op: "Neg"
  input: "Discriminator/discriminator/d_fc2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/xentropy_1/Select_1"
  op: "Select"
  input: "discriminator_modified_loss/xentropy_1/GreaterEqual"
  input: "discriminator_modified_loss/xentropy_1/Neg"
  input: "Discriminator/discriminator/d_fc2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/xentropy_1/mul"
  op: "Mul"
  input: "Discriminator/discriminator/d_fc2/BiasAdd"
  input: "discriminator_modified_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/xentropy_1/sub"
  op: "Sub"
  input: "discriminator_modified_loss/xentropy_1/Select"
  input: "discriminator_modified_loss/xentropy_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/xentropy_1/Exp"
  op: "Exp"
  input: "discriminator_modified_loss/xentropy_1/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/xentropy_1/Log1p"
  op: "Log1p"
  input: "discriminator_modified_loss/xentropy_1/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/xentropy_1"
  op: "Add"
  input: "discriminator_modified_loss/xentropy_1/sub"
  input: "discriminator_modified_loss/xentropy_1/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/assert_broadcastable_1/weights"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/assert_broadcastable_1/weights/shape"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/assert_broadcastable_1/weights/rank"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/assert_broadcastable_1/values/shape"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/assert_broadcastable_1/values/rank"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/assert_broadcastable_1/static_scalar_check_success"
  op: "NoOp"
  input: "^Identity"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/ToFloat_1/x"
  op: "Const"
  input: "^discriminator_modified_loss/assert_broadcastable_1/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/Mul_2"
  op: "Mul"
  input: "discriminator_modified_loss/xentropy_1"
  input: "discriminator_modified_loss/ToFloat_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/Const_2"
  op: "Const"
  input: "^discriminator_modified_loss/assert_broadcastable_1/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/Sum_2"
  op: "Sum"
  input: "discriminator_modified_loss/Mul_2"
  input: "discriminator_modified_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present_1/Equal/y"
  op: "Const"
  input: "^discriminator_modified_loss/assert_broadcastable_1/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present_1/Equal"
  op: "Equal"
  input: "discriminator_modified_loss/ToFloat_1/x"
  input: "discriminator_modified_loss/num_present_1/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present_1/zeros_like"
  op: "Const"
  input: "^discriminator_modified_loss/assert_broadcastable_1/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present_1/ones_like/Shape"
  op: "Const"
  input: "^discriminator_modified_loss/assert_broadcastable_1/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present_1/ones_like/Const"
  op: "Const"
  input: "^discriminator_modified_loss/assert_broadcastable_1/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present_1/ones_like"
  op: "Fill"
  input: "discriminator_modified_loss/num_present_1/ones_like/Shape"
  input: "discriminator_modified_loss/num_present_1/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present_1/Select"
  op: "Select"
  input: "discriminator_modified_loss/num_present_1/Equal"
  input: "discriminator_modified_loss/num_present_1/zeros_like"
  input: "discriminator_modified_loss/num_present_1/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present_1/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^discriminator_modified_loss/assert_broadcastable_1/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present_1/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^discriminator_modified_loss/assert_broadcastable_1/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present_1/broadcast_weights/assert_broadcastable/values/shape"
  op: "Const"
  input: "^discriminator_modified_loss/assert_broadcastable_1/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present_1/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^discriminator_modified_loss/assert_broadcastable_1/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present_1/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^discriminator_modified_loss/assert_broadcastable_1/static_scalar_check_success"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present_1/broadcast_weights/ones_like/Shape"
  op: "Const"
  input: "^discriminator_modified_loss/assert_broadcastable_1/static_scalar_check_success"
  input: "^discriminator_modified_loss/num_present_1/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present_1/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^discriminator_modified_loss/assert_broadcastable_1/static_scalar_check_success"
  input: "^discriminator_modified_loss/num_present_1/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present_1/broadcast_weights/ones_like"
  op: "Fill"
  input: "discriminator_modified_loss/num_present_1/broadcast_weights/ones_like/Shape"
  input: "discriminator_modified_loss/num_present_1/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present_1/broadcast_weights"
  op: "Mul"
  input: "discriminator_modified_loss/num_present_1/Select"
  input: "discriminator_modified_loss/num_present_1/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present_1/Const"
  op: "Const"
  input: "^discriminator_modified_loss/assert_broadcastable_1/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/num_present_1"
  op: "Sum"
  input: "discriminator_modified_loss/num_present_1/broadcast_weights"
  input: "discriminator_modified_loss/num_present_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_modified_loss/Const_3"
  op: "Const"
  input: "^discriminator_modified_loss/assert_broadcastable_1/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_modified_loss/Sum_3"
  op: "Sum"
  input: "discriminator_modified_loss/Sum_2"
  input: "discriminator_modified_loss/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_modified_loss/value_1"
  op: "DivNoNan"
  input: "discriminator_modified_loss/Sum_3"
  input: "discriminator_modified_loss/num_present_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss/add_1"
  op: "Add"
  input: "discriminator_modified_loss/value"
  input: "discriminator_modified_loss/value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss_1/ones_like/Shape"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator_modified_loss_1/ones_like/Const"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator_modified_loss_1/ones_like"
  op: "Fill"
  input: "generator_modified_loss_1/ones_like/Shape"
  input: "generator_modified_loss_1/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_modified_loss_1/xentropy/zeros_like"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator_modified_loss_1/xentropy/GreaterEqual"
  op: "GreaterEqual"
  input: "Discriminator_2/discriminator/d_fc2/BiasAdd"
  input: "generator_modified_loss_1/xentropy/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss_1/xentropy/Select"
  op: "Select"
  input: "generator_modified_loss_1/xentropy/GreaterEqual"
  input: "Discriminator_2/discriminator/d_fc2/BiasAdd"
  input: "generator_modified_loss_1/xentropy/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss_1/xentropy/Neg"
  op: "Neg"
  input: "Discriminator_2/discriminator/d_fc2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss_1/xentropy/Select_1"
  op: "Select"
  input: "generator_modified_loss_1/xentropy/GreaterEqual"
  input: "generator_modified_loss_1/xentropy/Neg"
  input: "Discriminator_2/discriminator/d_fc2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss_1/xentropy/mul"
  op: "Mul"
  input: "Discriminator_2/discriminator/d_fc2/BiasAdd"
  input: "generator_modified_loss_1/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss_1/xentropy/sub"
  op: "Sub"
  input: "generator_modified_loss_1/xentropy/Select"
  input: "generator_modified_loss_1/xentropy/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss_1/xentropy/Exp"
  op: "Exp"
  input: "generator_modified_loss_1/xentropy/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss_1/xentropy/Log1p"
  op: "Log1p"
  input: "generator_modified_loss_1/xentropy/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss_1/xentropy"
  op: "Add"
  input: "generator_modified_loss_1/xentropy/sub"
  input: "generator_modified_loss_1/xentropy/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss_1/assert_broadcastable/weights"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator_modified_loss_1/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_modified_loss_1/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_modified_loss_1/assert_broadcastable/values/shape"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator_modified_loss_1/assert_broadcastable/values/rank"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^Identity"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss_1/ToFloat/x"
  op: "Const"
  input: "^generator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator_modified_loss_1/Mul"
  op: "Mul"
  input: "generator_modified_loss_1/xentropy"
  input: "generator_modified_loss_1/ToFloat/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss_1/Const"
  op: "Const"
  input: "^generator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator_modified_loss_1/Sum"
  op: "Sum"
  input: "generator_modified_loss_1/Mul"
  input: "generator_modified_loss_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_modified_loss_1/num_present/Equal/y"
  op: "Const"
  input: "^generator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator_modified_loss_1/num_present/Equal"
  op: "Equal"
  input: "generator_modified_loss_1/ToFloat/x"
  input: "generator_modified_loss_1/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss_1/num_present/zeros_like"
  op: "Const"
  input: "^generator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator_modified_loss_1/num_present/ones_like/Shape"
  op: "Const"
  input: "^generator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_modified_loss_1/num_present/ones_like/Const"
  op: "Const"
  input: "^generator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator_modified_loss_1/num_present/ones_like"
  op: "Fill"
  input: "generator_modified_loss_1/num_present/ones_like/Shape"
  input: "generator_modified_loss_1/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_modified_loss_1/num_present/Select"
  op: "Select"
  input: "generator_modified_loss_1/num_present/Equal"
  input: "generator_modified_loss_1/num_present/zeros_like"
  input: "generator_modified_loss_1/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss_1/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^generator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_modified_loss_1/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^generator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "generator_modified_loss_1/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Const"
  input: "^generator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator_modified_loss_1/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^generator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "generator_modified_loss_1/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^generator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss_1/num_present/broadcast_weights/ones_like/Shape"
  op: "Const"
  input: "^generator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  input: "^generator_modified_loss_1/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator_modified_loss_1/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^generator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  input: "^generator_modified_loss_1/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator_modified_loss_1/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "generator_modified_loss_1/num_present/broadcast_weights/ones_like/Shape"
  input: "generator_modified_loss_1/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_modified_loss_1/num_present/broadcast_weights"
  op: "Mul"
  input: "generator_modified_loss_1/num_present/Select"
  input: "generator_modified_loss_1/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_modified_loss_1/num_present/Const"
  op: "Const"
  input: "^generator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator_modified_loss_1/num_present"
  op: "Sum"
  input: "generator_modified_loss_1/num_present/broadcast_weights"
  input: "generator_modified_loss_1/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_modified_loss_1/Const_1"
  op: "Const"
  input: "^generator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_modified_loss_1/Sum_1"
  op: "Sum"
  input: "generator_modified_loss_1/Sum"
  input: "generator_modified_loss_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_modified_loss_1/value"
  op: "DivNoNan"
  input: "generator_modified_loss_1/Sum_1"
  input: "generator_modified_loss_1/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/ones_like/Shape"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/ones_like/Const"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/ones_like"
  op: "Fill"
  input: "discriminator_modified_loss_1/ones_like/Shape"
  input: "discriminator_modified_loss_1/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_modified_loss_1/mul/y"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.75
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/mul"
  op: "Mul"
  input: "discriminator_modified_loss_1/ones_like"
  input: "discriminator_modified_loss_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/add/y"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/add"
  op: "Add"
  input: "discriminator_modified_loss_1/mul"
  input: "discriminator_modified_loss_1/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/xentropy/zeros_like"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/xentropy/GreaterEqual"
  op: "GreaterEqual"
  input: "Discriminator_3/discriminator/d_fc2/BiasAdd"
  input: "discriminator_modified_loss_1/xentropy/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/xentropy/Select"
  op: "Select"
  input: "discriminator_modified_loss_1/xentropy/GreaterEqual"
  input: "Discriminator_3/discriminator/d_fc2/BiasAdd"
  input: "discriminator_modified_loss_1/xentropy/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/xentropy/Neg"
  op: "Neg"
  input: "Discriminator_3/discriminator/d_fc2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/xentropy/Select_1"
  op: "Select"
  input: "discriminator_modified_loss_1/xentropy/GreaterEqual"
  input: "discriminator_modified_loss_1/xentropy/Neg"
  input: "Discriminator_3/discriminator/d_fc2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/xentropy/mul"
  op: "Mul"
  input: "Discriminator_3/discriminator/d_fc2/BiasAdd"
  input: "discriminator_modified_loss_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/xentropy/sub"
  op: "Sub"
  input: "discriminator_modified_loss_1/xentropy/Select"
  input: "discriminator_modified_loss_1/xentropy/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/xentropy/Exp"
  op: "Exp"
  input: "discriminator_modified_loss_1/xentropy/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/xentropy/Log1p"
  op: "Log1p"
  input: "discriminator_modified_loss_1/xentropy/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/xentropy"
  op: "Add"
  input: "discriminator_modified_loss_1/xentropy/sub"
  input: "discriminator_modified_loss_1/xentropy/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/assert_broadcastable/weights"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/assert_broadcastable/values/shape"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/assert_broadcastable/values/rank"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^Identity"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/ToFloat/x"
  op: "Const"
  input: "^discriminator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/Mul_1"
  op: "Mul"
  input: "discriminator_modified_loss_1/xentropy"
  input: "discriminator_modified_loss_1/ToFloat/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/Const"
  op: "Const"
  input: "^discriminator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/Sum"
  op: "Sum"
  input: "discriminator_modified_loss_1/Mul_1"
  input: "discriminator_modified_loss_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present/Equal/y"
  op: "Const"
  input: "^discriminator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present/Equal"
  op: "Equal"
  input: "discriminator_modified_loss_1/ToFloat/x"
  input: "discriminator_modified_loss_1/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present/zeros_like"
  op: "Const"
  input: "^discriminator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present/ones_like/Shape"
  op: "Const"
  input: "^discriminator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present/ones_like/Const"
  op: "Const"
  input: "^discriminator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present/ones_like"
  op: "Fill"
  input: "discriminator_modified_loss_1/num_present/ones_like/Shape"
  input: "discriminator_modified_loss_1/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present/Select"
  op: "Select"
  input: "discriminator_modified_loss_1/num_present/Equal"
  input: "discriminator_modified_loss_1/num_present/zeros_like"
  input: "discriminator_modified_loss_1/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^discriminator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^discriminator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Const"
  input: "^discriminator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^discriminator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^discriminator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present/broadcast_weights/ones_like/Shape"
  op: "Const"
  input: "^discriminator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  input: "^discriminator_modified_loss_1/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^discriminator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  input: "^discriminator_modified_loss_1/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "discriminator_modified_loss_1/num_present/broadcast_weights/ones_like/Shape"
  input: "discriminator_modified_loss_1/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present/broadcast_weights"
  op: "Mul"
  input: "discriminator_modified_loss_1/num_present/Select"
  input: "discriminator_modified_loss_1/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present/Const"
  op: "Const"
  input: "^discriminator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present"
  op: "Sum"
  input: "discriminator_modified_loss_1/num_present/broadcast_weights"
  input: "discriminator_modified_loss_1/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_modified_loss_1/Const_1"
  op: "Const"
  input: "^discriminator_modified_loss_1/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/Sum_1"
  op: "Sum"
  input: "discriminator_modified_loss_1/Sum"
  input: "discriminator_modified_loss_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_modified_loss_1/value"
  op: "DivNoNan"
  input: "discriminator_modified_loss_1/Sum_1"
  input: "discriminator_modified_loss_1/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/zeros_like"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/xentropy_1/zeros_like"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/xentropy_1/GreaterEqual"
  op: "GreaterEqual"
  input: "Discriminator_2/discriminator/d_fc2/BiasAdd"
  input: "discriminator_modified_loss_1/xentropy_1/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/xentropy_1/Select"
  op: "Select"
  input: "discriminator_modified_loss_1/xentropy_1/GreaterEqual"
  input: "Discriminator_2/discriminator/d_fc2/BiasAdd"
  input: "discriminator_modified_loss_1/xentropy_1/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/xentropy_1/Neg"
  op: "Neg"
  input: "Discriminator_2/discriminator/d_fc2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/xentropy_1/Select_1"
  op: "Select"
  input: "discriminator_modified_loss_1/xentropy_1/GreaterEqual"
  input: "discriminator_modified_loss_1/xentropy_1/Neg"
  input: "Discriminator_2/discriminator/d_fc2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/xentropy_1/mul"
  op: "Mul"
  input: "Discriminator_2/discriminator/d_fc2/BiasAdd"
  input: "discriminator_modified_loss_1/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/xentropy_1/sub"
  op: "Sub"
  input: "discriminator_modified_loss_1/xentropy_1/Select"
  input: "discriminator_modified_loss_1/xentropy_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/xentropy_1/Exp"
  op: "Exp"
  input: "discriminator_modified_loss_1/xentropy_1/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/xentropy_1/Log1p"
  op: "Log1p"
  input: "discriminator_modified_loss_1/xentropy_1/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/xentropy_1"
  op: "Add"
  input: "discriminator_modified_loss_1/xentropy_1/sub"
  input: "discriminator_modified_loss_1/xentropy_1/Log1p"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/assert_broadcastable_1/weights"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/assert_broadcastable_1/weights/shape"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/assert_broadcastable_1/weights/rank"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/assert_broadcastable_1/values/shape"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/assert_broadcastable_1/values/rank"
  op: "Const"
  input: "^Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/assert_broadcastable_1/static_scalar_check_success"
  op: "NoOp"
  input: "^Identity"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/ToFloat_1/x"
  op: "Const"
  input: "^discriminator_modified_loss_1/assert_broadcastable_1/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/Mul_2"
  op: "Mul"
  input: "discriminator_modified_loss_1/xentropy_1"
  input: "discriminator_modified_loss_1/ToFloat_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/Const_2"
  op: "Const"
  input: "^discriminator_modified_loss_1/assert_broadcastable_1/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/Sum_2"
  op: "Sum"
  input: "discriminator_modified_loss_1/Mul_2"
  input: "discriminator_modified_loss_1/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present_1/Equal/y"
  op: "Const"
  input: "^discriminator_modified_loss_1/assert_broadcastable_1/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present_1/Equal"
  op: "Equal"
  input: "discriminator_modified_loss_1/ToFloat_1/x"
  input: "discriminator_modified_loss_1/num_present_1/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present_1/zeros_like"
  op: "Const"
  input: "^discriminator_modified_loss_1/assert_broadcastable_1/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present_1/ones_like/Shape"
  op: "Const"
  input: "^discriminator_modified_loss_1/assert_broadcastable_1/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present_1/ones_like/Const"
  op: "Const"
  input: "^discriminator_modified_loss_1/assert_broadcastable_1/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present_1/ones_like"
  op: "Fill"
  input: "discriminator_modified_loss_1/num_present_1/ones_like/Shape"
  input: "discriminator_modified_loss_1/num_present_1/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present_1/Select"
  op: "Select"
  input: "discriminator_modified_loss_1/num_present_1/Equal"
  input: "discriminator_modified_loss_1/num_present_1/zeros_like"
  input: "discriminator_modified_loss_1/num_present_1/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present_1/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^discriminator_modified_loss_1/assert_broadcastable_1/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present_1/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^discriminator_modified_loss_1/assert_broadcastable_1/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present_1/broadcast_weights/assert_broadcastable/values/shape"
  op: "Const"
  input: "^discriminator_modified_loss_1/assert_broadcastable_1/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present_1/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^discriminator_modified_loss_1/assert_broadcastable_1/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present_1/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^discriminator_modified_loss_1/assert_broadcastable_1/static_scalar_check_success"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present_1/broadcast_weights/ones_like/Shape"
  op: "Const"
  input: "^discriminator_modified_loss_1/assert_broadcastable_1/static_scalar_check_success"
  input: "^discriminator_modified_loss_1/num_present_1/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present_1/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^discriminator_modified_loss_1/assert_broadcastable_1/static_scalar_check_success"
  input: "^discriminator_modified_loss_1/num_present_1/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present_1/broadcast_weights/ones_like"
  op: "Fill"
  input: "discriminator_modified_loss_1/num_present_1/broadcast_weights/ones_like/Shape"
  input: "discriminator_modified_loss_1/num_present_1/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present_1/broadcast_weights"
  op: "Mul"
  input: "discriminator_modified_loss_1/num_present_1/Select"
  input: "discriminator_modified_loss_1/num_present_1/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present_1/Const"
  op: "Const"
  input: "^discriminator_modified_loss_1/assert_broadcastable_1/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/num_present_1"
  op: "Sum"
  input: "discriminator_modified_loss_1/num_present_1/broadcast_weights"
  input: "discriminator_modified_loss_1/num_present_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_modified_loss_1/Const_3"
  op: "Const"
  input: "^discriminator_modified_loss_1/assert_broadcastable_1/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_modified_loss_1/Sum_3"
  op: "Sum"
  input: "discriminator_modified_loss_1/Sum_2"
  input: "discriminator_modified_loss_1/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_modified_loss_1/value_1"
  op: "DivNoNan"
  input: "discriminator_modified_loss_1/Sum_3"
  input: "discriminator_modified_loss_1/num_present_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_modified_loss_1/add_1"
  op: "Add"
  input: "discriminator_modified_loss_1/value"
  input: "discriminator_modified_loss_1/value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "add_1"
  op: "Add"
  input: "generator_modified_loss_1/value"
  input: "discriminator_modified_loss_1/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "NoOp"
  op: "NoOp"
  input: "^Identity"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/mul/y"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "discriminator_train/mul"
  op: "Mul"
  input: "discriminator_modified_loss/add_1"
  input: "discriminator_train/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Shape"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/grad_ys_0"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/Fill"
  op: "Fill"
  input: "discriminator_train/gradients/Shape"
  input: "discriminator_train/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_train/mul_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/Fill"
  input: "discriminator_train/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_train/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/Fill"
  input: "discriminator_modified_loss/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_train/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^NoOp"
  input: "^discriminator_train/gradients/discriminator_train/mul_grad/Mul"
  input: "^discriminator_train/gradients/discriminator_train/mul_grad/Mul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_train/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_train/mul_grad/Mul"
  input: "^discriminator_train/gradients/discriminator_train/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_train/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_train/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_train/mul_grad/Mul_1"
  input: "^discriminator_train/gradients/discriminator_train/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_train/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^NoOp"
  input: "^discriminator_train/gradients/discriminator_train/mul_grad/tuple/control_dependency"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_train/mul_grad/tuple/control_dependency"
  input: "^discriminator_train/gradients/discriminator_modified_loss/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_train/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_train/mul_grad/tuple/control_dependency"
  input: "^discriminator_train/gradients/discriminator_modified_loss/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_train/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/value_grad/Shape"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/value_grad/Shape_1"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_grad/Shape"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "discriminator_train/gradients/discriminator_modified_loss/add_1_grad/tuple/control_dependency"
  input: "discriminator_modified_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/value_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_grad/div_no_nan"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/value_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_grad/Sum"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/value_grad/Neg"
  op: "Neg"
  input: "discriminator_modified_loss/Sum_1"
  input: "^NoOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_grad/Neg"
  input: "discriminator_modified_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_grad/div_no_nan_1"
  input: "discriminator_modified_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/value_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/discriminator_modified_loss/add_1_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/value_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_grad/mul"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_grad/Sum_1"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^NoOp"
  input: "^discriminator_train/gradients/discriminator_modified_loss/value_grad/Reshape"
  input: "^discriminator_train/gradients/discriminator_modified_loss/value_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_grad/Reshape"
  input: "^discriminator_train/gradients/discriminator_modified_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/value_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_grad/Reshape_1"
  input: "^discriminator_train/gradients/discriminator_modified_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/value_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/Shape"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/Shape_1"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/Shape"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/div_no_nan"
  op: "DivNoNan"
  input: "discriminator_train/gradients/discriminator_modified_loss/add_1_grad/tuple/control_dependency_1"
  input: "discriminator_modified_loss/num_present_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/div_no_nan"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/Sum"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/Neg"
  op: "Neg"
  input: "discriminator_modified_loss/Sum_3"
  input: "^NoOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/Neg"
  input: "discriminator_modified_loss/num_present_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/div_no_nan_1"
  input: "discriminator_modified_loss/num_present_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/discriminator_modified_loss/add_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/mul"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/Sum_1"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^NoOp"
  input: "^discriminator_train/gradients/discriminator_modified_loss/value_1_grad/Reshape"
  input: "^discriminator_train/gradients/discriminator_modified_loss/value_1_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/Reshape"
  input: "^discriminator_train/gradients/discriminator_modified_loss/value_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/value_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/discriminator_modified_loss/value_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/value_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/discriminator_modified_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Sum_1_grad/Const"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "discriminator_train/gradients/discriminator_modified_loss/Sum_1_grad/Reshape"
  input: "discriminator_train/gradients/discriminator_modified_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Sum_3_grad/Reshape/shape"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Sum_3_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/discriminator_modified_loss/value_1_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/discriminator_modified_loss/Sum_3_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Sum_3_grad/Const"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Sum_3_grad/Tile"
  op: "Tile"
  input: "discriminator_train/gradients/discriminator_modified_loss/Sum_3_grad/Reshape"
  input: "discriminator_train/gradients/discriminator_modified_loss/Sum_3_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Sum_grad/Reshape/shape"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/discriminator_modified_loss/Sum_1_grad/Tile"
  input: "discriminator_train/gradients/discriminator_modified_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Sum_grad/Const"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Sum_grad/Tile"
  op: "Tile"
  input: "discriminator_train/gradients/discriminator_modified_loss/Sum_grad/Reshape"
  input: "discriminator_train/gradients/discriminator_modified_loss/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Sum_2_grad/Reshape/shape"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Sum_2_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/discriminator_modified_loss/Sum_3_grad/Tile"
  input: "discriminator_train/gradients/discriminator_modified_loss/Sum_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Sum_2_grad/Const"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Sum_2_grad/Tile"
  op: "Tile"
  input: "discriminator_train/gradients/discriminator_modified_loss/Sum_2_grad/Reshape"
  input: "discriminator_train/gradients/discriminator_modified_loss/Sum_2_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/Shape"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/Shape_1"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/Shape"
  input: "discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/discriminator_modified_loss/Sum_grad/Tile"
  input: "discriminator_modified_loss/ToFloat/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/Mul"
  input: "discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/Sum"
  input: "discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/Mul_1"
  op: "Mul"
  input: "discriminator_modified_loss/xentropy"
  input: "discriminator_train/gradients/discriminator_modified_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/Mul_1"
  input: "discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/Sum_1"
  input: "discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^NoOp"
  input: "^discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/Reshape"
  input: "^discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/Reshape_1"
  input: "^discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/Shape"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/Shape_1"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/Shape"
  input: "discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/discriminator_modified_loss/Sum_2_grad/Tile"
  input: "discriminator_modified_loss/ToFloat_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/Mul"
  input: "discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/Sum"
  input: "discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/Mul_1"
  op: "Mul"
  input: "discriminator_modified_loss/xentropy_1"
  input: "discriminator_train/gradients/discriminator_modified_loss/Sum_2_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/Mul_1"
  input: "discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/Sum_1"
  input: "discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^NoOp"
  input: "^discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/Reshape"
  input: "^discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/Reshape"
  input: "^discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/Reshape_1"
  input: "^discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_grad/tuple/group_deps"
  op: "NoOp"
  input: "^NoOp"
  input: "^discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/tuple/control_dependency"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/tuple/control_dependency"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/tuple/control_dependency"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^NoOp"
  input: "^discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/tuple/control_dependency"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/tuple/control_dependency"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/tuple/control_dependency"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy/sub_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^NoOp"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy/sub_grad/Neg"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy_grad/tuple/control_dependency"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_grad/tuple/control_dependency"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/Mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy/sub_grad/Neg"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/xentropy/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Log1p_grad/add/x"
  op: "Const"
  input: "^NoOp"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Log1p_grad/add"
  op: "Add"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Log1p_grad/add/x"
  input: "discriminator_modified_loss/xentropy/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Log1p_grad/Reciprocal"
  op: "Reciprocal"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Log1p_grad/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Log1p_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Log1p_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/sub_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^NoOp"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy_1/sub_grad/Neg"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy_1_grad/tuple/control_dependency"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1_grad/tuple/control_dependency"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/Mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/sub_grad/Neg"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy_1/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/xentropy_1/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Log1p_grad/add/x"
  op: "Const"
  input: "^NoOp"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy_1_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Log1p_grad/add"
  op: "Add"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Log1p_grad/add/x"
  input: "discriminator_modified_loss/xentropy_1/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Log1p_grad/Reciprocal"
  op: "Reciprocal"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Log1p_grad/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Log1p_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Log1p_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_grad/zeros_like"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_grad/Select"
  op: "Select"
  input: "discriminator_modified_loss/xentropy/GreaterEqual"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy/sub_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_grad/Select_1"
  op: "Select"
  input: "discriminator_modified_loss/xentropy/GreaterEqual"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_grad/zeros_like"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^NoOp"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_grad/Select"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_grad/Select_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_grad/Select"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_grad/Select_1"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy/mul_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy/sub_grad/tuple/control_dependency_1"
  input: "discriminator_modified_loss/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy/sub_grad/tuple/control_dependency_1"
  input: "Discriminator_1/discriminator/d_fc2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^NoOp"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy/mul_grad/Mul"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy/mul_grad/Mul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy/mul_grad/Mul"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/xentropy/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy/mul_grad/Mul_1"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/xentropy/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Exp_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Log1p_grad/mul"
  input: "discriminator_modified_loss/xentropy/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_grad/zeros_like"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_grad/Select"
  op: "Select"
  input: "discriminator_modified_loss/xentropy_1/GreaterEqual"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/sub_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_grad/Select_1"
  op: "Select"
  input: "discriminator_modified_loss/xentropy_1/GreaterEqual"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_grad/zeros_like"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^NoOp"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_grad/Select"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_grad/Select_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_grad/Select"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_grad/Select_1"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/mul_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/sub_grad/tuple/control_dependency_1"
  input: "discriminator_modified_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/sub_grad/tuple/control_dependency_1"
  input: "Discriminator/discriminator/d_fc2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^NoOp"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy_1/mul_grad/Mul"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy_1/mul_grad/Mul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/mul_grad/Mul"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/xentropy_1/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/mul_grad/Mul_1"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy_1/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/xentropy_1/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Exp_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Log1p_grad/mul"
  input: "discriminator_modified_loss/xentropy_1/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_1_grad/zeros_like"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_1_grad/Select"
  op: "Select"
  input: "discriminator_modified_loss/xentropy/GreaterEqual"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Exp_grad/mul"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_1_grad/Select_1"
  op: "Select"
  input: "discriminator_modified_loss/xentropy/GreaterEqual"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_1_grad/zeros_like"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^NoOp"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_1_grad/Select"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_1_grad/Select_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_1_grad/Select"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_1_grad/Select_1"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_1_grad/zeros_like"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_1_grad/Select"
  op: "Select"
  input: "discriminator_modified_loss/xentropy_1/GreaterEqual"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Exp_grad/mul"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_1_grad/Select_1"
  op: "Select"
  input: "discriminator_modified_loss/xentropy_1/GreaterEqual"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_1_grad/zeros_like"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^NoOp"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_1_grad/Select"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_1_grad/Select_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_1_grad/Select"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_1_grad/Select_1"
  input: "^discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Neg_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Neg_grad/Neg"
  op: "Neg"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN"
  op: "AddN"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy/mul_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "discriminator_train/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^NoOp"
  input: "^discriminator_train/gradients/AddN"
  input: "^discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/AddN"
  input: "^discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/xentropy/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/BiasAdd_grad/BiasAddGrad"
  input: "^discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_1"
  op: "AddN"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/mul_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_1_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/d_fc2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "discriminator_train/gradients/AddN_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/d_fc2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^NoOp"
  input: "^discriminator_train/gradients/AddN_1"
  input: "^discriminator_train/gradients/Discriminator/discriminator/d_fc2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/d_fc2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/AddN_1"
  input: "^discriminator_train/gradients/Discriminator/discriminator/d_fc2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/discriminator_modified_loss/xentropy_1/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/d_fc2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/Discriminator/discriminator/d_fc2/BiasAdd_grad/BiasAddGrad"
  input: "^discriminator_train/gradients/Discriminator/discriminator/d_fc2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator/discriminator/d_fc2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/BiasAdd_grad/tuple/control_dependency"
  input: "Discriminator_1/discriminator/d_fc2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Discriminator_1/discriminator/Tanh"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^NoOp"
  input: "^discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/MatMul_grad/MatMul"
  input: "^discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/MatMul_grad/MatMul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/MatMul_grad/MatMul"
  input: "^discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/MatMul_grad/MatMul_1"
  input: "^discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/d_fc2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "discriminator_train/gradients/Discriminator/discriminator/d_fc2/BiasAdd_grad/tuple/control_dependency"
  input: "Discriminator/discriminator/d_fc2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/d_fc2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Discriminator/discriminator/Tanh"
  input: "discriminator_train/gradients/Discriminator/discriminator/d_fc2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/d_fc2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^NoOp"
  input: "^discriminator_train/gradients/Discriminator/discriminator/d_fc2/MatMul_grad/MatMul"
  input: "^discriminator_train/gradients/Discriminator/discriminator/d_fc2/MatMul_grad/MatMul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/d_fc2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/Discriminator/discriminator/d_fc2/MatMul_grad/MatMul"
  input: "^discriminator_train/gradients/Discriminator/discriminator/d_fc2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator/discriminator/d_fc2/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/d_fc2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/Discriminator/discriminator/d_fc2/MatMul_grad/MatMul_1"
  input: "^discriminator_train/gradients/Discriminator/discriminator/d_fc2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator/discriminator/d_fc2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Discriminator_1/discriminator/Tanh"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Discriminator/discriminator/Tanh"
  input: "discriminator_train/gradients/Discriminator/discriminator/d_fc2/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_2"
  op: "AddN"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/BiasAdd_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/Discriminator/discriminator/d_fc2/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/mul_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/Tanh_grad/TanhGrad"
  input: "Discriminator_1/discriminator/dropout/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/Tanh_grad/TanhGrad"
  input: "Discriminator_1/discriminator/dropout/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^NoOp"
  input: "^discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/mul_grad/Mul"
  input: "^discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/mul_grad/Mul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/mul_grad/Mul"
  input: "^discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/mul_grad/Mul_1"
  input: "^discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/mul_grad/Mul"
  op: "Mul"
  input: "discriminator_train/gradients/Discriminator/discriminator/Tanh_grad/TanhGrad"
  input: "Discriminator/discriminator/dropout/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "discriminator_train/gradients/Discriminator/discriminator/Tanh_grad/TanhGrad"
  input: "Discriminator/discriminator/dropout/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^NoOp"
  input: "^discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/mul_grad/Mul"
  input: "^discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/mul_grad/Mul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/mul_grad/Mul"
  input: "^discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/mul_grad/Mul_1"
  input: "^discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_3"
  op: "AddN"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/MatMul_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/Discriminator/discriminator/d_fc2/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/Shape"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/Shape_1"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/Shape"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/mul_grad/tuple/control_dependency"
  input: "Discriminator_1/discriminator/dropout/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/RealDiv"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/Sum"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/Neg"
  op: "Neg"
  input: "Discriminator_1/discriminator/d_fc1/BiasAdd"
  input: "^NoOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/Neg"
  input: "Discriminator_1/discriminator/dropout/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/RealDiv_1"
  input: "Discriminator_1/discriminator/dropout/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/mul_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/mul"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/Sum_1"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^NoOp"
  input: "^discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/Reshape"
  input: "^discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/Reshape"
  input: "^discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/Reshape_1"
  input: "^discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/Shape"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/Shape_1"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/Shape"
  input: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/mul_grad/tuple/control_dependency"
  input: "Discriminator/discriminator/dropout/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/Sum"
  op: "Sum"
  input: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/RealDiv"
  input: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/Reshape"
  op: "Reshape"
  input: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/Sum"
  input: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/Neg"
  op: "Neg"
  input: "Discriminator/discriminator/d_fc1/BiasAdd"
  input: "^NoOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/Neg"
  input: "Discriminator/discriminator/dropout/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/RealDiv_1"
  input: "Discriminator/discriminator/dropout/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/mul"
  op: "Mul"
  input: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/mul_grad/tuple/control_dependency"
  input: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/Sum_1"
  op: "Sum"
  input: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/mul"
  input: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/Sum_1"
  input: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^NoOp"
  input: "^discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/Reshape"
  input: "^discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/Reshape"
  input: "^discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/Reshape_1"
  input: "^discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^NoOp"
  input: "^discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/BiasAdd_grad/BiasAddGrad"
  input: "^discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/tuple/control_dependency"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/tuple/control_dependency"
  input: "^discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator_1/discriminator/dropout/dropout/truediv_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/BiasAdd_grad/BiasAddGrad"
  input: "^discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/d_fc1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/d_fc1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^NoOp"
  input: "^discriminator_train/gradients/Discriminator/discriminator/d_fc1/BiasAdd_grad/BiasAddGrad"
  input: "^discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/tuple/control_dependency"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/d_fc1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/tuple/control_dependency"
  input: "^discriminator_train/gradients/Discriminator/discriminator/d_fc1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator/discriminator/dropout/dropout/truediv_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/d_fc1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/Discriminator/discriminator/d_fc1/BiasAdd_grad/BiasAddGrad"
  input: "^discriminator_train/gradients/Discriminator/discriminator/d_fc1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator/discriminator/d_fc1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/BiasAdd_grad/tuple/control_dependency"
  input: "Discriminator_1/discriminator/d_fc1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Discriminator_1/discriminator/flatten/Reshape"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^NoOp"
  input: "^discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/MatMul_grad/MatMul"
  input: "^discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/MatMul_grad/MatMul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/MatMul_grad/MatMul"
  input: "^discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/MatMul_grad/MatMul_1"
  input: "^discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/d_fc1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "discriminator_train/gradients/Discriminator/discriminator/d_fc1/BiasAdd_grad/tuple/control_dependency"
  input: "Discriminator/discriminator/d_fc1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/d_fc1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Discriminator/discriminator/flatten/Reshape"
  input: "discriminator_train/gradients/Discriminator/discriminator/d_fc1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/d_fc1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^NoOp"
  input: "^discriminator_train/gradients/Discriminator/discriminator/d_fc1/MatMul_grad/MatMul"
  input: "^discriminator_train/gradients/Discriminator/discriminator/d_fc1/MatMul_grad/MatMul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/d_fc1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "discriminator_train/gradients/Discriminator/discriminator/d_fc1/MatMul_grad/MatMul"
  input: "^discriminator_train/gradients/Discriminator/discriminator/d_fc1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator/discriminator/d_fc1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/Discriminator/discriminator/d_fc1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "discriminator_train/gradients/Discriminator/discriminator/d_fc1/MatMul_grad/MatMul_1"
  input: "^discriminator_train/gradients/Discriminator/discriminator/d_fc1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator/discriminator/d_fc1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_4"
  op: "AddN"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/BiasAdd_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/Discriminator/discriminator/d_fc1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/gradients/AddN_5"
  op: "AddN"
  input: "discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/MatMul_grad/tuple/control_dependency_1"
  input: "discriminator_train/gradients/Discriminator/discriminator/d_fc1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/CrossReplicaSum/group_assignment"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/CrossReplicaSum"
  op: "CrossReplicaSum"
  input: "discriminator_train/gradients/AddN_5"
  input: "discriminator_train/CrossReplicaSum/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/CrossReplicaSum_1/group_assignment"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/CrossReplicaSum_1"
  op: "CrossReplicaSum"
  input: "discriminator_train/gradients/AddN_4"
  input: "discriminator_train/CrossReplicaSum_1/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator_1/discriminator/d_fc1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/CrossReplicaSum_2/group_assignment"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/CrossReplicaSum_2"
  op: "CrossReplicaSum"
  input: "discriminator_train/gradients/AddN_3"
  input: "discriminator_train/CrossReplicaSum_2/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/CrossReplicaSum_3/group_assignment"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "discriminator_train/CrossReplicaSum_3"
  op: "CrossReplicaSum"
  input: "discriminator_train/gradients/AddN_2"
  input: "discriminator_train/CrossReplicaSum_3/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/gradients/Discriminator_1/discriminator/d_fc2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/beta1_power/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "discriminator_train/beta1_power"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "discriminator_train/beta1_power"
    }
  }
}
node {
  name: "discriminator_train/beta1_power/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "discriminator_train/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/beta1_power/Assign"
  op: "AssignVariableOp"
  input: "discriminator_train/beta1_power"
  input: "discriminator_train/beta1_power/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator_train/beta1_power/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "discriminator_train/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator_train/beta2_power/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "discriminator_train/beta2_power"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "discriminator_train/beta2_power"
    }
  }
}
node {
  name: "discriminator_train/beta2_power/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "discriminator_train/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "discriminator_train/beta2_power/Assign"
  op: "AssignVariableOp"
  input: "discriminator_train/beta2_power"
  input: "discriminator_train/beta2_power/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator_train/beta2_power/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "discriminator_train/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\014\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Discriminator/discriminator/d_fc1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Discriminator/discriminator/d_fc1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3072
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Discriminator/discriminator/d_fc1/kernel/Adam"
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "Discriminator/discriminator/d_fc1/kernel/Adam"
  input: "Discriminator/discriminator/d_fc1/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\014\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Discriminator/discriminator/d_fc1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Discriminator/discriminator/d_fc1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3072
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Discriminator/discriminator/d_fc1/kernel/Adam_1"
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "Discriminator/discriminator/d_fc1/kernel/Adam_1"
  input: "Discriminator/discriminator/d_fc1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Discriminator/discriminator/d_fc1/bias/Adam"
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "Discriminator/discriminator/d_fc1/bias/Adam"
  input: "Discriminator/discriminator/d_fc1/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Discriminator/discriminator/d_fc1/bias/Adam_1"
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "Discriminator/discriminator/d_fc1/bias/Adam_1"
  input: "Discriminator/discriminator/d_fc1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc1/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Discriminator/discriminator/d_fc2/kernel/Adam"
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "Discriminator/discriminator/d_fc2/kernel/Adam"
  input: "Discriminator/discriminator/d_fc2/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Discriminator/discriminator/d_fc2/kernel/Adam_1"
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "Discriminator/discriminator/d_fc2/kernel/Adam_1"
  input: "Discriminator/discriminator/d_fc2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Discriminator/discriminator/d_fc2/bias/Adam"
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "Discriminator/discriminator/d_fc2/bias/Adam"
  input: "Discriminator/discriminator/d_fc2/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Discriminator/discriminator/d_fc2/bias/Adam_1"
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "Discriminator/discriminator/d_fc2/bias/Adam_1"
  input: "Discriminator/discriminator/d_fc2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Discriminator/discriminator/d_fc2/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator_train/Adam/learning_rate"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00019999999494757503
      }
    }
  }
}
node {
  name: "discriminator_train/Adam/beta1"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "discriminator_train/Adam/beta2"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "discriminator_train/Adam/epsilon"
  op: "Const"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  op: "Enter"
  input: "discriminator_train/beta1_power"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  op: "Enter"
  input: "discriminator_train/beta2_power"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "Discriminator/discriminator/d_fc1/MatMul/ReadVariableOp/Enter"
  input: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/kernel/ResourceApplyAdam/Enter"
  input: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/kernel/ResourceApplyAdam/Enter_1"
  input: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "discriminator_train/Adam/learning_rate"
  input: "discriminator_train/Adam/beta1"
  input: "discriminator_train/Adam/beta2"
  input: "discriminator_train/Adam/epsilon"
  input: "discriminator_train/CrossReplicaSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/kernel"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/kernel/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "Discriminator/discriminator/d_fc1/kernel/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/kernel/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "Discriminator/discriminator/d_fc1/kernel/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "Discriminator/discriminator/d_fc1/BiasAdd/ReadVariableOp/Enter"
  input: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/bias/ResourceApplyAdam/Enter"
  input: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/bias/ResourceApplyAdam/Enter_1"
  input: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/bias/ResourceApplyAdam/ReadVariableOp"
  input: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "discriminator_train/Adam/learning_rate"
  input: "discriminator_train/Adam/beta1"
  input: "discriminator_train/Adam/beta2"
  input: "discriminator_train/Adam/epsilon"
  input: "discriminator_train/CrossReplicaSum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/bias/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "Discriminator/discriminator/d_fc1/bias/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/bias/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "Discriminator/discriminator/d_fc1/bias/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc2/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc2/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "Discriminator/discriminator/d_fc2/MatMul/ReadVariableOp/Enter"
  input: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc2/kernel/ResourceApplyAdam/Enter"
  input: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc2/kernel/ResourceApplyAdam/Enter_1"
  input: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc2/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "discriminator_train/Adam/learning_rate"
  input: "discriminator_train/Adam/beta1"
  input: "discriminator_train/Adam/beta2"
  input: "discriminator_train/Adam/epsilon"
  input: "discriminator_train/CrossReplicaSum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/kernel"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc2/kernel/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "Discriminator/discriminator/d_fc2/kernel/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc2/kernel/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "Discriminator/discriminator/d_fc2/kernel/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc2/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc2/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^NoOp"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc2/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "Discriminator/discriminator/d_fc2/BiasAdd/ReadVariableOp/Enter"
  input: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc2/bias/ResourceApplyAdam/Enter"
  input: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc2/bias/ResourceApplyAdam/Enter_1"
  input: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc2/bias/ResourceApplyAdam/ReadVariableOp"
  input: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc2/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "discriminator_train/Adam/learning_rate"
  input: "discriminator_train/Adam/beta1"
  input: "discriminator_train/Adam/beta2"
  input: "discriminator_train/Adam/epsilon"
  input: "discriminator_train/CrossReplicaSum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/bias"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc2/bias/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "Discriminator/discriminator/d_fc2/bias/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc2/bias/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "Discriminator/discriminator/d_fc2/bias/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "discriminator_train/Adam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^NoOp"
  input: "^discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/bias/ResourceApplyAdam"
  input: "^discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/kernel/ResourceApplyAdam"
  input: "^discriminator_train/Adam/update_Discriminator/discriminator/d_fc2/bias/ResourceApplyAdam"
  input: "^discriminator_train/Adam/update_Discriminator/discriminator/d_fc2/kernel/ResourceApplyAdam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator_train/Adam/mul"
  op: "Mul"
  input: "discriminator_train/Adam/ReadVariableOp"
  input: "discriminator_train/Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/Adam/AssignVariableOp"
  op: "AssignVariableOp"
  input: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "discriminator_train/Adam/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator_train/Adam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^NoOp"
  input: "^discriminator_train/Adam/AssignVariableOp"
  input: "^discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/bias/ResourceApplyAdam"
  input: "^discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/kernel/ResourceApplyAdam"
  input: "^discriminator_train/Adam/update_Discriminator/discriminator/d_fc2/bias/ResourceApplyAdam"
  input: "^discriminator_train/Adam/update_Discriminator/discriminator/d_fc2/kernel/ResourceApplyAdam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator_train/Adam/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^NoOp"
  input: "^discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/bias/ResourceApplyAdam"
  input: "^discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/kernel/ResourceApplyAdam"
  input: "^discriminator_train/Adam/update_Discriminator/discriminator/d_fc2/bias/ResourceApplyAdam"
  input: "^discriminator_train/Adam/update_Discriminator/discriminator/d_fc2/kernel/ResourceApplyAdam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator_train/Adam/mul_1"
  op: "Mul"
  input: "discriminator_train/Adam/ReadVariableOp_2"
  input: "discriminator_train/Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/Adam/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "discriminator_train/Adam/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator_train/Adam/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^NoOp"
  input: "^discriminator_train/Adam/AssignVariableOp_1"
  input: "^discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/bias/ResourceApplyAdam"
  input: "^discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/kernel/ResourceApplyAdam"
  input: "^discriminator_train/Adam/update_Discriminator/discriminator/d_fc2/bias/ResourceApplyAdam"
  input: "^discriminator_train/Adam/update_Discriminator/discriminator/d_fc2/kernel/ResourceApplyAdam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Discriminator/discriminator/d_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "discriminator_train/Adam/update"
  op: "NoOp"
  input: "^NoOp"
  input: "^discriminator_train/Adam/ReadVariableOp_1"
  input: "^discriminator_train/Adam/ReadVariableOp_3"
  input: "^discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/bias/ResourceApplyAdam"
  input: "^discriminator_train/Adam/update_Discriminator/discriminator/d_fc1/kernel/ResourceApplyAdam"
  input: "^discriminator_train/Adam/update_Discriminator/discriminator/d_fc2/bias/ResourceApplyAdam"
  input: "^discriminator_train/Adam/update_Discriminator/discriminator/d_fc2/kernel/ResourceApplyAdam"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "discriminator_train/Adam/Const"
  op: "Const"
  input: "^NoOp"
  input: "^discriminator_train/Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "discriminator_train/Adam"
  op: "AssignAddVariableOp"
  input: "discriminator_train/Adam/Enter"
  input: "discriminator_train/Adam/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "discriminator_train/Adam/Enter"
  op: "Enter"
  input: "global_step"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "discriminator_train/train_op/CheckNumerics"
  op: "CheckNumerics"
  input: "discriminator_modified_loss/add_1"
  input: "^NoOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "message"
    value {
      s: "LossTensor is inf or nan"
    }
  }
}
node {
  name: "discriminator_train/train_op/control_dependency/Identity"
  op: "Identity"
  input: "discriminator_train/train_op/CheckNumerics"
  input: "^discriminator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@discriminator_train/train_op/CheckNumerics"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/mul/y"
  op: "Const"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "generator_train/mul"
  op: "Mul"
  input: "generator_modified_loss_1/value"
  input: "generator_train/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Shape"
  op: "Const"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/grad_ys_0"
  op: "Const"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/Fill"
  op: "Fill"
  input: "generator_train/gradients/Shape"
  input: "generator_train/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "generator_train/gradients/generator_train/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/Fill"
  input: "generator_train/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_train/mul_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/Fill"
  input: "generator_modified_loss_1/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_train/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  input: "^generator_train/gradients/generator_train/mul_grad/Mul"
  input: "^generator_train/gradients/generator_train/mul_grad/Mul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_train/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator_train/mul_grad/Mul"
  input: "^generator_train/gradients/generator_train/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_train/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_train/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator_train/mul_grad/Mul_1"
  input: "^generator_train/gradients/generator_train/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_train/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/value_grad/Shape"
  op: "Const"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/value_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator_modified_loss_1/value_grad/Shape"
  input: "generator_train/gradients/generator_modified_loss_1/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "generator_train/gradients/generator_train/mul_grad/tuple/control_dependency"
  input: "generator_modified_loss_1/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/value_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator_modified_loss_1/value_grad/div_no_nan"
  input: "generator_train/gradients/generator_modified_loss_1/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/value_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator_modified_loss_1/value_grad/Sum"
  input: "generator_train/gradients/generator_modified_loss_1/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/value_grad/Neg"
  op: "Neg"
  input: "generator_modified_loss_1/Sum_1"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "generator_train/gradients/generator_modified_loss_1/value_grad/Neg"
  input: "generator_modified_loss_1/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "generator_train/gradients/generator_modified_loss_1/value_grad/div_no_nan_1"
  input: "generator_modified_loss_1/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/value_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator_train/mul_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator_modified_loss_1/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/value_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator_modified_loss_1/value_grad/mul"
  input: "generator_train/gradients/generator_modified_loss_1/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/value_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator_modified_loss_1/value_grad/Sum_1"
  input: "generator_train/gradients/generator_modified_loss_1/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  input: "^generator_train/gradients/generator_modified_loss_1/value_grad/Reshape"
  input: "^generator_train/gradients/generator_modified_loss_1/value_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator_modified_loss_1/value_grad/Reshape"
  input: "^generator_train/gradients/generator_modified_loss_1/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_modified_loss_1/value_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator_modified_loss_1/value_grad/Reshape_1"
  input: "^generator_train/gradients/generator_modified_loss_1/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_modified_loss_1/value_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/Sum_1_grad/Reshape/shape"
  op: "Const"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator_modified_loss_1/value_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator_modified_loss_1/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/Sum_1_grad/Const"
  op: "Const"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/Sum_1_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator_modified_loss_1/Sum_1_grad/Reshape"
  input: "generator_train/gradients/generator_modified_loss_1/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/Sum_grad/Reshape/shape"
  op: "Const"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/Sum_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator_modified_loss_1/Sum_1_grad/Tile"
  input: "generator_train/gradients/generator_modified_loss_1/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/Sum_grad/Const"
  op: "Const"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/Sum_grad/Tile"
  op: "Tile"
  input: "generator_train/gradients/generator_modified_loss_1/Sum_grad/Reshape"
  input: "generator_train/gradients/generator_modified_loss_1/Sum_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/Mul_grad/Shape"
  op: "Const"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/Mul_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/generator_modified_loss_1/Mul_grad/Shape"
  input: "generator_train/gradients/generator_modified_loss_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/Mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator_modified_loss_1/Sum_grad/Tile"
  input: "generator_modified_loss_1/ToFloat/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/Mul_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/generator_modified_loss_1/Mul_grad/Mul"
  input: "generator_train/gradients/generator_modified_loss_1/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/Mul_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/generator_modified_loss_1/Mul_grad/Sum"
  input: "generator_train/gradients/generator_modified_loss_1/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/Mul_grad/Mul_1"
  op: "Mul"
  input: "generator_modified_loss_1/xentropy"
  input: "generator_train/gradients/generator_modified_loss_1/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/Mul_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/generator_modified_loss_1/Mul_grad/Mul_1"
  input: "generator_train/gradients/generator_modified_loss_1/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/generator_modified_loss_1/Mul_grad/Sum_1"
  input: "generator_train/gradients/generator_modified_loss_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  input: "^generator_train/gradients/generator_modified_loss_1/Mul_grad/Reshape"
  input: "^generator_train/gradients/generator_modified_loss_1/Mul_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator_modified_loss_1/Mul_grad/Reshape"
  input: "^generator_train/gradients/generator_modified_loss_1/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_modified_loss_1/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator_modified_loss_1/Mul_grad/Reshape_1"
  input: "^generator_train/gradients/generator_modified_loss_1/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_modified_loss_1/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/xentropy_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  input: "^generator_train/gradients/generator_modified_loss_1/Mul_grad/tuple/control_dependency"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/xentropy_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator_modified_loss_1/Mul_grad/tuple/control_dependency"
  input: "^generator_train/gradients/generator_modified_loss_1/xentropy_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_modified_loss_1/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/xentropy_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator_modified_loss_1/Mul_grad/tuple/control_dependency"
  input: "^generator_train/gradients/generator_modified_loss_1/xentropy_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_modified_loss_1/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/xentropy/sub_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator_modified_loss_1/xentropy_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/xentropy/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  input: "^generator_train/gradients/generator_modified_loss_1/xentropy/sub_grad/Neg"
  input: "^generator_train/gradients/generator_modified_loss_1/xentropy_grad/tuple/control_dependency"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/xentropy/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator_modified_loss_1/xentropy_grad/tuple/control_dependency"
  input: "^generator_train/gradients/generator_modified_loss_1/xentropy/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_modified_loss_1/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/xentropy/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator_modified_loss_1/xentropy/sub_grad/Neg"
  input: "^generator_train/gradients/generator_modified_loss_1/xentropy/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_modified_loss_1/xentropy/sub_grad/Neg"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/xentropy/Log1p_grad/add/x"
  op: "Const"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  input: "^generator_train/gradients/generator_modified_loss_1/xentropy_grad/tuple/control_dependency_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/xentropy/Log1p_grad/add"
  op: "Add"
  input: "generator_train/gradients/generator_modified_loss_1/xentropy/Log1p_grad/add/x"
  input: "generator_modified_loss_1/xentropy/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/xentropy/Log1p_grad/Reciprocal"
  op: "Reciprocal"
  input: "generator_train/gradients/generator_modified_loss_1/xentropy/Log1p_grad/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/xentropy/Log1p_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator_modified_loss_1/xentropy_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator_modified_loss_1/xentropy/Log1p_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/xentropy/Select_grad/zeros_like"
  op: "Const"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/xentropy/Select_grad/Select"
  op: "Select"
  input: "generator_modified_loss_1/xentropy/GreaterEqual"
  input: "generator_train/gradients/generator_modified_loss_1/xentropy/sub_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator_modified_loss_1/xentropy/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/xentropy/Select_grad/Select_1"
  op: "Select"
  input: "generator_modified_loss_1/xentropy/GreaterEqual"
  input: "generator_train/gradients/generator_modified_loss_1/xentropy/Select_grad/zeros_like"
  input: "generator_train/gradients/generator_modified_loss_1/xentropy/sub_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/xentropy/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  input: "^generator_train/gradients/generator_modified_loss_1/xentropy/Select_grad/Select"
  input: "^generator_train/gradients/generator_modified_loss_1/xentropy/Select_grad/Select_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/xentropy/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator_modified_loss_1/xentropy/Select_grad/Select"
  input: "^generator_train/gradients/generator_modified_loss_1/xentropy/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_modified_loss_1/xentropy/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/xentropy/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator_modified_loss_1/xentropy/Select_grad/Select_1"
  input: "^generator_train/gradients/generator_modified_loss_1/xentropy/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_modified_loss_1/xentropy/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/xentropy/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/generator_modified_loss_1/xentropy/sub_grad/tuple/control_dependency_1"
  input: "generator_modified_loss_1/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/xentropy/mul_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/generator_modified_loss_1/xentropy/sub_grad/tuple/control_dependency_1"
  input: "Discriminator_2/discriminator/d_fc2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/xentropy/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  input: "^generator_train/gradients/generator_modified_loss_1/xentropy/mul_grad/Mul"
  input: "^generator_train/gradients/generator_modified_loss_1/xentropy/mul_grad/Mul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/xentropy/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator_modified_loss_1/xentropy/mul_grad/Mul"
  input: "^generator_train/gradients/generator_modified_loss_1/xentropy/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_modified_loss_1/xentropy/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/xentropy/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator_modified_loss_1/xentropy/mul_grad/Mul_1"
  input: "^generator_train/gradients/generator_modified_loss_1/xentropy/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_modified_loss_1/xentropy/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/xentropy/Exp_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/generator_modified_loss_1/xentropy/Log1p_grad/mul"
  input: "generator_modified_loss_1/xentropy/Exp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/xentropy/Select_1_grad/zeros_like"
  op: "Const"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/xentropy/Select_1_grad/Select"
  op: "Select"
  input: "generator_modified_loss_1/xentropy/GreaterEqual"
  input: "generator_train/gradients/generator_modified_loss_1/xentropy/Exp_grad/mul"
  input: "generator_train/gradients/generator_modified_loss_1/xentropy/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/xentropy/Select_1_grad/Select_1"
  op: "Select"
  input: "generator_modified_loss_1/xentropy/GreaterEqual"
  input: "generator_train/gradients/generator_modified_loss_1/xentropy/Select_1_grad/zeros_like"
  input: "generator_train/gradients/generator_modified_loss_1/xentropy/Exp_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/xentropy/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  input: "^generator_train/gradients/generator_modified_loss_1/xentropy/Select_1_grad/Select"
  input: "^generator_train/gradients/generator_modified_loss_1/xentropy/Select_1_grad/Select_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/xentropy/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/generator_modified_loss_1/xentropy/Select_1_grad/Select"
  input: "^generator_train/gradients/generator_modified_loss_1/xentropy/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_modified_loss_1/xentropy/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/xentropy/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/generator_modified_loss_1/xentropy/Select_1_grad/Select_1"
  input: "^generator_train/gradients/generator_modified_loss_1/xentropy/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_modified_loss_1/xentropy/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/generator_modified_loss_1/xentropy/Neg_grad/Neg"
  op: "Neg"
  input: "generator_train/gradients/generator_modified_loss_1/xentropy/Select_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/AddN"
  op: "AddN"
  input: "generator_train/gradients/generator_modified_loss_1/xentropy/Select_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator_modified_loss_1/xentropy/mul_grad/tuple/control_dependency"
  input: "generator_train/gradients/generator_modified_loss_1/xentropy/Select_1_grad/tuple/control_dependency_1"
  input: "generator_train/gradients/generator_modified_loss_1/xentropy/Neg_grad/Neg"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_modified_loss_1/xentropy/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/d_fc2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "generator_train/gradients/AddN"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/d_fc2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  input: "^generator_train/gradients/AddN"
  input: "^generator_train/gradients/Discriminator_2/discriminator/d_fc2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/d_fc2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/AddN"
  input: "^generator_train/gradients/Discriminator_2/discriminator/d_fc2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/generator_modified_loss_1/xentropy/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/d_fc2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/Discriminator_2/discriminator/d_fc2/BiasAdd_grad/BiasAddGrad"
  input: "^generator_train/gradients/Discriminator_2/discriminator/d_fc2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Discriminator_2/discriminator/d_fc2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/d_fc2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "generator_train/gradients/Discriminator_2/discriminator/d_fc2/BiasAdd_grad/tuple/control_dependency"
  input: "Discriminator_2/discriminator/d_fc2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/d_fc2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Discriminator_2/discriminator/Tanh"
  input: "generator_train/gradients/Discriminator_2/discriminator/d_fc2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/d_fc2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  input: "^generator_train/gradients/Discriminator_2/discriminator/d_fc2/MatMul_grad/MatMul"
  input: "^generator_train/gradients/Discriminator_2/discriminator/d_fc2/MatMul_grad/MatMul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/d_fc2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/Discriminator_2/discriminator/d_fc2/MatMul_grad/MatMul"
  input: "^generator_train/gradients/Discriminator_2/discriminator/d_fc2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Discriminator_2/discriminator/d_fc2/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/d_fc2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/Discriminator_2/discriminator/d_fc2/MatMul_grad/MatMul_1"
  input: "^generator_train/gradients/Discriminator_2/discriminator/d_fc2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Discriminator_2/discriminator/d_fc2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Discriminator_2/discriminator/Tanh"
  input: "generator_train/gradients/Discriminator_2/discriminator/d_fc2/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/Discriminator_2/discriminator/Tanh_grad/TanhGrad"
  input: "Discriminator_2/discriminator/dropout/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/Discriminator_2/discriminator/Tanh_grad/TanhGrad"
  input: "Discriminator_2/discriminator/dropout/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  input: "^generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/mul_grad/Mul"
  input: "^generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/mul_grad/Mul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/mul_grad/Mul"
  input: "^generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/mul_grad/Mul_1"
  input: "^generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/Shape"
  op: "Const"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/Shape"
  input: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/mul_grad/tuple/control_dependency"
  input: "Discriminator_2/discriminator/dropout/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/RealDiv"
  input: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/Sum"
  input: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/Neg"
  op: "Neg"
  input: "Discriminator_2/discriminator/d_fc1/BiasAdd"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/Neg"
  input: "Discriminator_2/discriminator/dropout/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/RealDiv_1"
  input: "Discriminator_2/discriminator/dropout/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/mul_grad/tuple/control_dependency"
  input: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/mul"
  input: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/Sum_1"
  input: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  input: "^generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/Reshape"
  input: "^generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/Reshape"
  input: "^generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/Reshape_1"
  input: "^generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/d_fc1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/d_fc1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  input: "^generator_train/gradients/Discriminator_2/discriminator/d_fc1/BiasAdd_grad/BiasAddGrad"
  input: "^generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/tuple/control_dependency"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/d_fc1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/tuple/control_dependency"
  input: "^generator_train/gradients/Discriminator_2/discriminator/d_fc1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Discriminator_2/discriminator/dropout/dropout/truediv_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/d_fc1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/Discriminator_2/discriminator/d_fc1/BiasAdd_grad/BiasAddGrad"
  input: "^generator_train/gradients/Discriminator_2/discriminator/d_fc1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Discriminator_2/discriminator/d_fc1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/d_fc1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "generator_train/gradients/Discriminator_2/discriminator/d_fc1/BiasAdd_grad/tuple/control_dependency"
  input: "Discriminator_2/discriminator/d_fc1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/d_fc1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Discriminator_2/discriminator/flatten/Reshape"
  input: "generator_train/gradients/Discriminator_2/discriminator/d_fc1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/d_fc1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  input: "^generator_train/gradients/Discriminator_2/discriminator/d_fc1/MatMul_grad/MatMul"
  input: "^generator_train/gradients/Discriminator_2/discriminator/d_fc1/MatMul_grad/MatMul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/d_fc1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/Discriminator_2/discriminator/d_fc1/MatMul_grad/MatMul"
  input: "^generator_train/gradients/Discriminator_2/discriminator/d_fc1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Discriminator_2/discriminator/d_fc1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/d_fc1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/Discriminator_2/discriminator/d_fc1/MatMul_grad/MatMul_1"
  input: "^generator_train/gradients/Discriminator_2/discriminator/d_fc1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Discriminator_2/discriminator/d_fc1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/flatten/Reshape_grad/Shape"
  op: "Const"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\200\000\000\000 \000\000\000 \000\000\000\003\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/Discriminator_2/discriminator/flatten/Reshape_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/Discriminator_2/discriminator/d_fc1/MatMul_grad/tuple/control_dependency"
  input: "generator_train/gradients/Discriminator_2/discriminator/flatten/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/Tanh_1_grad/TanhGrad"
  op: "TanhGrad"
  input: "Generator_1/generator/Tanh_1"
  input: "generator_train/gradients/Discriminator_2/discriminator/flatten/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 32
          }
          dim {
            size: 32
          }
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/Reshape_grad/Shape"
  op: "Const"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/Reshape_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/Generator_1/generator/Tanh_1_grad/TanhGrad"
  input: "generator_train/gradients/Generator_1/generator/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/g_fc2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "generator_train/gradients/Generator_1/generator/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/g_fc2/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  input: "^generator_train/gradients/Generator_1/generator/Reshape_grad/Reshape"
  input: "^generator_train/gradients/Generator_1/generator/g_fc2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/g_fc2/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/Generator_1/generator/Reshape_grad/Reshape"
  input: "^generator_train/gradients/Generator_1/generator/g_fc2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Generator_1/generator/Reshape_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/g_fc2/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/Generator_1/generator/g_fc2/BiasAdd_grad/BiasAddGrad"
  input: "^generator_train/gradients/Generator_1/generator/g_fc2/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Generator_1/generator/g_fc2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/g_fc2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "generator_train/gradients/Generator_1/generator/g_fc2/BiasAdd_grad/tuple/control_dependency"
  input: "Generator_1/generator/g_fc2/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/g_fc2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Generator_1/generator/Tanh"
  input: "generator_train/gradients/Generator_1/generator/g_fc2/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/g_fc2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  input: "^generator_train/gradients/Generator_1/generator/g_fc2/MatMul_grad/MatMul"
  input: "^generator_train/gradients/Generator_1/generator/g_fc2/MatMul_grad/MatMul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/g_fc2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/Generator_1/generator/g_fc2/MatMul_grad/MatMul"
  input: "^generator_train/gradients/Generator_1/generator/g_fc2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Generator_1/generator/g_fc2/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/g_fc2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/Generator_1/generator/g_fc2/MatMul_grad/MatMul_1"
  input: "^generator_train/gradients/Generator_1/generator/g_fc2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Generator_1/generator/g_fc2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "Generator_1/generator/Tanh"
  input: "generator_train/gradients/Generator_1/generator/g_fc2/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/dropout/dropout/mul_grad/Mul"
  op: "Mul"
  input: "generator_train/gradients/Generator_1/generator/Tanh_grad/TanhGrad"
  input: "Generator_1/generator/dropout/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/dropout/dropout/mul_grad/Mul_1"
  op: "Mul"
  input: "generator_train/gradients/Generator_1/generator/Tanh_grad/TanhGrad"
  input: "Generator_1/generator/dropout/dropout/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/dropout/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  input: "^generator_train/gradients/Generator_1/generator/dropout/dropout/mul_grad/Mul"
  input: "^generator_train/gradients/Generator_1/generator/dropout/dropout/mul_grad/Mul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/dropout/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/Generator_1/generator/dropout/dropout/mul_grad/Mul"
  input: "^generator_train/gradients/Generator_1/generator/dropout/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Generator_1/generator/dropout/dropout/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/dropout/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/Generator_1/generator/dropout/dropout/mul_grad/Mul_1"
  input: "^generator_train/gradients/Generator_1/generator/dropout/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Generator_1/generator/dropout/dropout/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/Shape"
  op: "Const"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/Shape_1"
  op: "Const"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/Shape"
  input: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "generator_train/gradients/Generator_1/generator/dropout/dropout/mul_grad/tuple/control_dependency"
  input: "Generator_1/generator/dropout/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/Sum"
  op: "Sum"
  input: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/RealDiv"
  input: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/Reshape"
  op: "Reshape"
  input: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/Sum"
  input: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/Neg"
  op: "Neg"
  input: "Generator_1/generator/g_fc1/BiasAdd"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/Neg"
  input: "Generator_1/generator/dropout/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/RealDiv_1"
  input: "Generator_1/generator/dropout/dropout/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/mul"
  op: "Mul"
  input: "generator_train/gradients/Generator_1/generator/dropout/dropout/mul_grad/tuple/control_dependency"
  input: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/Sum_1"
  op: "Sum"
  input: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/mul"
  input: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/Sum_1"
  input: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  input: "^generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/Reshape"
  input: "^generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/Reshape_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/Reshape"
  input: "^generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/Reshape_1"
  input: "^generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/g_fc1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/g_fc1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  input: "^generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/tuple/control_dependency"
  input: "^generator_train/gradients/Generator_1/generator/g_fc1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/g_fc1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/tuple/control_dependency"
  input: "^generator_train/gradients/Generator_1/generator/g_fc1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Generator_1/generator/dropout/dropout/truediv_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/g_fc1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/Generator_1/generator/g_fc1/BiasAdd_grad/BiasAddGrad"
  input: "^generator_train/gradients/Generator_1/generator/g_fc1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Generator_1/generator/g_fc1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/g_fc1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "generator_train/gradients/Generator_1/generator/g_fc1/BiasAdd_grad/tuple/control_dependency"
  input: "Generator_1/generator/g_fc1/MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/g_fc1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "split_1:1"
  input: "generator_train/gradients/Generator_1/generator/g_fc1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/g_fc1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  input: "^generator_train/gradients/Generator_1/generator/g_fc1/MatMul_grad/MatMul"
  input: "^generator_train/gradients/Generator_1/generator/g_fc1/MatMul_grad/MatMul_1"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/g_fc1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "generator_train/gradients/Generator_1/generator/g_fc1/MatMul_grad/MatMul"
  input: "^generator_train/gradients/Generator_1/generator/g_fc1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Generator_1/generator/g_fc1/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/gradients/Generator_1/generator/g_fc1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "generator_train/gradients/Generator_1/generator/g_fc1/MatMul_grad/MatMul_1"
  input: "^generator_train/gradients/Generator_1/generator/g_fc1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Generator_1/generator/g_fc1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/CrossReplicaSum/group_assignment"
  op: "Const"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Generator_1/generator/g_fc1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/CrossReplicaSum"
  op: "CrossReplicaSum"
  input: "generator_train/gradients/Generator_1/generator/g_fc1/MatMul_grad/tuple/control_dependency_1"
  input: "generator_train/CrossReplicaSum/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Generator_1/generator/g_fc1/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/CrossReplicaSum_1/group_assignment"
  op: "Const"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Generator_1/generator/g_fc1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/CrossReplicaSum_1"
  op: "CrossReplicaSum"
  input: "generator_train/gradients/Generator_1/generator/g_fc1/BiasAdd_grad/tuple/control_dependency_1"
  input: "generator_train/CrossReplicaSum_1/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Generator_1/generator/g_fc1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/CrossReplicaSum_2/group_assignment"
  op: "Const"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Generator_1/generator/g_fc2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/CrossReplicaSum_2"
  op: "CrossReplicaSum"
  input: "generator_train/gradients/Generator_1/generator/g_fc2/MatMul_grad/tuple/control_dependency_1"
  input: "generator_train/CrossReplicaSum_2/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Generator_1/generator/g_fc2/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/CrossReplicaSum_3/group_assignment"
  op: "Const"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Generator_1/generator/g_fc2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 8
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000\005\000\000\000\006\000\000\000\007\000\000\000"
      }
    }
  }
}
node {
  name: "generator_train/CrossReplicaSum_3"
  op: "CrossReplicaSum"
  input: "generator_train/gradients/Generator_1/generator/g_fc2/BiasAdd_grad/tuple/control_dependency_1"
  input: "generator_train/CrossReplicaSum_3/group_assignment"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/gradients/Generator_1/generator/g_fc2/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/beta1_power/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "generator_train/beta1_power"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "generator_train/beta1_power"
    }
  }
}
node {
  name: "generator_train/beta1_power/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "generator_train/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/beta1_power/Assign"
  op: "AssignVariableOp"
  input: "generator_train/beta1_power"
  input: "generator_train/beta1_power/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator_train/beta1_power/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "generator_train/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator_train/beta2_power/Initializer/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "generator_train/beta2_power"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "generator_train/beta2_power"
    }
  }
}
node {
  name: "generator_train/beta2_power/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "generator_train/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "generator_train/beta2_power/Assign"
  op: "AssignVariableOp"
  input: "generator_train/beta2_power"
  input: "generator_train/beta2_power/Initializer/initial_value"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator_train/beta2_power/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "generator_train/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator/generator/g_fc1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc1/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc1/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Generator/generator/g_fc1/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Generator/generator/g_fc1/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Generator/generator/g_fc1/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Generator/generator/g_fc1/kernel/Adam"
    }
  }
}
node {
  name: "Generator/generator/g_fc1/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc1/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "Generator/generator/g_fc1/kernel/Adam"
  input: "Generator/generator/g_fc1/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator/generator/g_fc1/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Generator/generator/g_fc1/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator/generator/g_fc1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc1/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc1/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Generator/generator/g_fc1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Generator/generator/g_fc1/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Generator/generator/g_fc1/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Generator/generator/g_fc1/kernel/Adam_1"
    }
  }
}
node {
  name: "Generator/generator/g_fc1/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc1/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "Generator/generator/g_fc1/kernel/Adam_1"
  input: "Generator/generator/g_fc1/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator/generator/g_fc1/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Generator/generator/g_fc1/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator/generator/g_fc1/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc1/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Generator/generator/g_fc1/bias/Adam"
    }
  }
}
node {
  name: "Generator/generator/g_fc1/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc1/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "Generator/generator/g_fc1/bias/Adam"
  input: "Generator/generator/g_fc1/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator/generator/g_fc1/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Generator/generator/g_fc1/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator/generator/g_fc1/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc1/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Generator/generator/g_fc1/bias/Adam_1"
    }
  }
}
node {
  name: "Generator/generator/g_fc1/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc1/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "Generator/generator/g_fc1/bias/Adam_1"
  input: "Generator/generator/g_fc1/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator/generator/g_fc1/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Generator/generator/g_fc1/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator/generator/g_fc2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc2/kernel/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc2/kernel/Adam/Initializer/zeros"
  op: "Fill"
  input: "Generator/generator/g_fc2/kernel/Adam/Initializer/zeros/shape_as_tensor"
  input: "Generator/generator/g_fc2/kernel/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Generator/generator/g_fc2/kernel/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 3072
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Generator/generator/g_fc2/kernel/Adam"
    }
  }
}
node {
  name: "Generator/generator/g_fc2/kernel/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc2/kernel/Adam/Assign"
  op: "AssignVariableOp"
  input: "Generator/generator/g_fc2/kernel/Adam"
  input: "Generator/generator/g_fc2/kernel/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator/generator/g_fc2/kernel/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Generator/generator/g_fc2/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator/generator/g_fc2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\014\000\000"
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc2/kernel/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc2/kernel/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Generator/generator/g_fc2/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Generator/generator/g_fc2/kernel/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Generator/generator/g_fc2/kernel/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 3072
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Generator/generator/g_fc2/kernel/Adam_1"
    }
  }
}
node {
  name: "Generator/generator/g_fc2/kernel/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc2/kernel/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "Generator/generator/g_fc2/kernel/Adam_1"
  input: "Generator/generator/g_fc2/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator/generator/g_fc2/kernel/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Generator/generator/g_fc2/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator/generator/g_fc2/bias/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3072
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc2/bias/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc2/bias/Adam/Initializer/zeros"
  op: "Fill"
  input: "Generator/generator/g_fc2/bias/Adam/Initializer/zeros/shape_as_tensor"
  input: "Generator/generator/g_fc2/bias/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Generator/generator/g_fc2/bias/Adam"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3072
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Generator/generator/g_fc2/bias/Adam"
    }
  }
}
node {
  name: "Generator/generator/g_fc2/bias/Adam/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc2/bias/Adam/Assign"
  op: "AssignVariableOp"
  input: "Generator/generator/g_fc2/bias/Adam"
  input: "Generator/generator/g_fc2/bias/Adam/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator/generator/g_fc2/bias/Adam/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Generator/generator/g_fc2/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator/generator/g_fc2/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3072
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc2/bias/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc2/bias/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Generator/generator/g_fc2/bias/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Generator/generator/g_fc2/bias/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Generator/generator/g_fc2/bias/Adam_1"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3072
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "Generator/generator/g_fc2/bias/Adam_1"
    }
  }
}
node {
  name: "Generator/generator/g_fc2/bias/Adam_1/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Generator/generator/g_fc2/bias/Adam_1/Assign"
  op: "AssignVariableOp"
  input: "Generator/generator/g_fc2/bias/Adam_1"
  input: "Generator/generator/g_fc2/bias/Adam_1/Initializer/zeros"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Generator/generator/g_fc2/bias/Adam_1/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Generator/generator/g_fc2/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator_train/Adam/learning_rate"
  op: "Const"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.00019999999494757503
      }
    }
  }
}
node {
  name: "generator_train/Adam/beta1"
  op: "Const"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "generator_train/Adam/beta2"
  op: "Const"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "generator_train/Adam/epsilon"
  op: "Const"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "generator_train/Adam/update_Generator/generator/g_fc1/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "generator_train/Adam/update_Generator/generator/g_fc1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator_train/Adam/update_Generator/generator/g_fc1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  op: "Enter"
  input: "generator_train/beta1_power"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "generator_train/Adam/update_Generator/generator/g_fc1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "generator_train/Adam/update_Generator/generator/g_fc1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator_train/Adam/update_Generator/generator/g_fc1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  op: "Enter"
  input: "generator_train/beta2_power"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "generator_train/Adam/update_Generator/generator/g_fc1/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "Generator/generator/g_fc1/MatMul/ReadVariableOp/Enter"
  input: "generator_train/Adam/update_Generator/generator/g_fc1/kernel/ResourceApplyAdam/Enter"
  input: "generator_train/Adam/update_Generator/generator/g_fc1/kernel/ResourceApplyAdam/Enter_1"
  input: "generator_train/Adam/update_Generator/generator/g_fc1/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "generator_train/Adam/update_Generator/generator/g_fc1/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/CrossReplicaSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/kernel"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_Generator/generator/g_fc1/kernel/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "Generator/generator/g_fc1/kernel/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "generator_train/Adam/update_Generator/generator/g_fc1/kernel/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "Generator/generator/g_fc1/kernel/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "generator_train/Adam/update_Generator/generator/g_fc1/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "generator_train/Adam/update_Generator/generator/g_fc1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator_train/Adam/update_Generator/generator/g_fc1/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "generator_train/Adam/update_Generator/generator/g_fc1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator_train/Adam/update_Generator/generator/g_fc1/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "Generator/generator/g_fc1/BiasAdd/ReadVariableOp/Enter"
  input: "generator_train/Adam/update_Generator/generator/g_fc1/bias/ResourceApplyAdam/Enter"
  input: "generator_train/Adam/update_Generator/generator/g_fc1/bias/ResourceApplyAdam/Enter_1"
  input: "generator_train/Adam/update_Generator/generator/g_fc1/bias/ResourceApplyAdam/ReadVariableOp"
  input: "generator_train/Adam/update_Generator/generator/g_fc1/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/CrossReplicaSum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_Generator/generator/g_fc1/bias/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "Generator/generator/g_fc1/bias/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "generator_train/Adam/update_Generator/generator/g_fc1/bias/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "Generator/generator/g_fc1/bias/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "generator_train/Adam/update_Generator/generator/g_fc2/kernel/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "generator_train/Adam/update_Generator/generator/g_fc1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator_train/Adam/update_Generator/generator/g_fc2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "generator_train/Adam/update_Generator/generator/g_fc1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator_train/Adam/update_Generator/generator/g_fc2/kernel/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "Generator/generator/g_fc2/MatMul/ReadVariableOp/Enter"
  input: "generator_train/Adam/update_Generator/generator/g_fc2/kernel/ResourceApplyAdam/Enter"
  input: "generator_train/Adam/update_Generator/generator/g_fc2/kernel/ResourceApplyAdam/Enter_1"
  input: "generator_train/Adam/update_Generator/generator/g_fc2/kernel/ResourceApplyAdam/ReadVariableOp"
  input: "generator_train/Adam/update_Generator/generator/g_fc2/kernel/ResourceApplyAdam/ReadVariableOp_1"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/CrossReplicaSum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/kernel"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_Generator/generator/g_fc2/kernel/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "Generator/generator/g_fc2/kernel/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "generator_train/Adam/update_Generator/generator/g_fc2/kernel/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "Generator/generator/g_fc2/kernel/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "generator_train/Adam/update_Generator/generator/g_fc2/bias/ResourceApplyAdam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "generator_train/Adam/update_Generator/generator/g_fc1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator_train/Adam/update_Generator/generator/g_fc2/bias/ResourceApplyAdam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "generator_train/Adam/update_Generator/generator/g_fc1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator_train/Adam/update_Generator/generator/g_fc2/bias/ResourceApplyAdam"
  op: "ResourceApplyAdam"
  input: "Generator/generator/g_fc2/BiasAdd/ReadVariableOp/Enter"
  input: "generator_train/Adam/update_Generator/generator/g_fc2/bias/ResourceApplyAdam/Enter"
  input: "generator_train/Adam/update_Generator/generator/g_fc2/bias/ResourceApplyAdam/Enter_1"
  input: "generator_train/Adam/update_Generator/generator/g_fc2/bias/ResourceApplyAdam/ReadVariableOp"
  input: "generator_train/Adam/update_Generator/generator/g_fc2/bias/ResourceApplyAdam/ReadVariableOp_1"
  input: "generator_train/Adam/learning_rate"
  input: "generator_train/Adam/beta1"
  input: "generator_train/Adam/beta2"
  input: "generator_train/Adam/epsilon"
  input: "generator_train/CrossReplicaSum_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/bias"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "generator_train/Adam/update_Generator/generator/g_fc2/bias/ResourceApplyAdam/Enter"
  op: "Enter"
  input: "Generator/generator/g_fc2/bias/Adam"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "generator_train/Adam/update_Generator/generator/g_fc2/bias/ResourceApplyAdam/Enter_1"
  op: "Enter"
  input: "Generator/generator/g_fc2/bias/Adam_1"
  input: "^TPUReplicateMetadata"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc2/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "while_context"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 1
    }
  }
}
node {
  name: "generator_train/Adam/ReadVariableOp"
  op: "ReadVariableOp"
  input: "generator_train/Adam/update_Generator/generator/g_fc1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  input: "^generator_train/Adam/update_Generator/generator/g_fc1/bias/ResourceApplyAdam"
  input: "^generator_train/Adam/update_Generator/generator/g_fc1/kernel/ResourceApplyAdam"
  input: "^generator_train/Adam/update_Generator/generator/g_fc2/bias/ResourceApplyAdam"
  input: "^generator_train/Adam/update_Generator/generator/g_fc2/kernel/ResourceApplyAdam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator_train/Adam/mul"
  op: "Mul"
  input: "generator_train/Adam/ReadVariableOp"
  input: "generator_train/Adam/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/Adam/AssignVariableOp"
  op: "AssignVariableOp"
  input: "generator_train/Adam/update_Generator/generator/g_fc1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "generator_train/Adam/mul"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator_train/Adam/ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "generator_train/Adam/update_Generator/generator/g_fc1/kernel/ResourceApplyAdam/ReadVariableOp/Enter"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  input: "^generator_train/Adam/AssignVariableOp"
  input: "^generator_train/Adam/update_Generator/generator/g_fc1/bias/ResourceApplyAdam"
  input: "^generator_train/Adam/update_Generator/generator/g_fc1/kernel/ResourceApplyAdam"
  input: "^generator_train/Adam/update_Generator/generator/g_fc2/bias/ResourceApplyAdam"
  input: "^generator_train/Adam/update_Generator/generator/g_fc2/kernel/ResourceApplyAdam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator_train/Adam/ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "generator_train/Adam/update_Generator/generator/g_fc1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  input: "^generator_train/Adam/update_Generator/generator/g_fc1/bias/ResourceApplyAdam"
  input: "^generator_train/Adam/update_Generator/generator/g_fc1/kernel/ResourceApplyAdam"
  input: "^generator_train/Adam/update_Generator/generator/g_fc2/bias/ResourceApplyAdam"
  input: "^generator_train/Adam/update_Generator/generator/g_fc2/kernel/ResourceApplyAdam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator_train/Adam/mul_1"
  op: "Mul"
  input: "generator_train/Adam/ReadVariableOp_2"
  input: "generator_train/Adam/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/Adam/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "generator_train/Adam/update_Generator/generator/g_fc1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "generator_train/Adam/mul_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator_train/Adam/ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "generator_train/Adam/update_Generator/generator/g_fc1/kernel/ResourceApplyAdam/ReadVariableOp_1/Enter"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  input: "^generator_train/Adam/AssignVariableOp_1"
  input: "^generator_train/Adam/update_Generator/generator/g_fc1/bias/ResourceApplyAdam"
  input: "^generator_train/Adam/update_Generator/generator/g_fc1/kernel/ResourceApplyAdam"
  input: "^generator_train/Adam/update_Generator/generator/g_fc2/bias/ResourceApplyAdam"
  input: "^generator_train/Adam/update_Generator/generator/g_fc2/kernel/ResourceApplyAdam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Generator/generator/g_fc1/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "generator_train/Adam/update"
  op: "NoOp"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  input: "^generator_train/Adam/ReadVariableOp_1"
  input: "^generator_train/Adam/ReadVariableOp_3"
  input: "^generator_train/Adam/update_Generator/generator/g_fc1/bias/ResourceApplyAdam"
  input: "^generator_train/Adam/update_Generator/generator/g_fc1/kernel/ResourceApplyAdam"
  input: "^generator_train/Adam/update_Generator/generator/g_fc2/bias/ResourceApplyAdam"
  input: "^generator_train/Adam/update_Generator/generator/g_fc2/kernel/ResourceApplyAdam"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "generator_train/Adam/Const"
  op: "Const"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  input: "^generator_train/Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "generator_train/Adam"
  op: "AssignAddVariableOp"
  input: "discriminator_train/Adam/Enter"
  input: "generator_train/Adam/Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "generator_train/train_op/CheckNumerics"
  op: "CheckNumerics"
  input: "generator_modified_loss_1/value"
  input: "^discriminator_train/train_op/control_dependency/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
  attr {
    key: "message"
    value {
      s: "LossTensor is inf or nan"
    }
  }
}
node {
  name: "generator_train/train_op/control_dependency/Identity"
  op: "Identity"
  input: "generator_train/train_op/CheckNumerics"
  input: "^generator_train/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@generator_train/train_op/CheckNumerics"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Identity_2"
  op: "Identity"
  input: "add_1"
  input: "^generator_train/train_op/control_dependency/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "NextIteration"
  op: "NextIteration"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "NextIteration_1"
  op: "NextIteration"
  input: "Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Exit"
  op: "Exit"
  input: "Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Exit_1"
  op: "Exit"
  input: "Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "NoOp_1"
  op: "NoOp"
  input: "^cluster/pivot"
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "Identity_3"
  op: "Identity"
  input: "Exit_1"
  device: "/device:TPU_REPLICATED_CORE:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_output_identity"
    value {
      b: true
    }
  }
  attr {
    key: "_tpu_replicate"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "output0"
  op: "TPUReplicatedOutput"
  input: "Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "num_replicas"
    value {
      i: 8
    }
  }
}
node {
  name: "TPUCompilationResult"
  op: "TPUCompilationResult"
  input: "^TPUReplicateMetadata"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "_tpu_compilation_status"
    value {
      s: "cluster"
    }
  }
}
node {
  name: "output_0_shard_0"
  op: "Identity"
  input: "output0"
  input: "^NoOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "output_0_shard_1"
  op: "Identity"
  input: "output0:1"
  input: "^NoOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "output_0_shard_2"
  op: "Identity"
  input: "output0:2"
  input: "^NoOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "output_0_shard_3"
  op: "Identity"
  input: "output0:3"
  input: "^NoOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "output_0_shard_4"
  op: "Identity"
  input: "output0:4"
  input: "^NoOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "output_0_shard_5"
  op: "Identity"
  input: "output0:5"
  input: "^NoOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "output_0_shard_6"
  op: "Identity"
  input: "output0:6"
  input: "^NoOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "output_0_shard_7"
  op: "Identity"
  input: "output0:7"
  input: "^NoOp_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Identity_4/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Identity_4"
  op: "Identity"
  input: "Identity_4/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Identity_5"
  op: "Identity"
  input: "output_0_shard_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "output_0_shard_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Generator/generator/g_fc1/kernel"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_6"
  op: "Identity"
  input: "Read/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics"
  op: "CheckNumerics"
  input: "Identity_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for Generator/generator/g_fc1/kernel:0 is NaN"
    }
  }
}
node {
  name: "Read_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Generator/generator/g_fc1/bias"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_7"
  op: "Identity"
  input: "Read_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_1"
  op: "CheckNumerics"
  input: "Identity_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for Generator/generator/g_fc1/bias:0 is NaN"
    }
  }
}
node {
  name: "Read_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Generator/generator/g_fc2/kernel"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_8"
  op: "Identity"
  input: "Read_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_2"
  op: "CheckNumerics"
  input: "Identity_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for Generator/generator/g_fc2/kernel:0 is NaN"
    }
  }
}
node {
  name: "Read_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Generator/generator/g_fc2/bias"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_9"
  op: "Identity"
  input: "Read_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_3"
  op: "CheckNumerics"
  input: "Identity_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for Generator/generator/g_fc2/bias:0 is NaN"
    }
  }
}
node {
  name: "Read_4/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc1/kernel"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_10"
  op: "Identity"
  input: "Read_4/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_4"
  op: "CheckNumerics"
  input: "Identity_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3072
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for Discriminator/discriminator/d_fc1/kernel:0 is NaN"
    }
  }
}
node {
  name: "Read_5/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc1/bias"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_11"
  op: "Identity"
  input: "Read_5/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_5"
  op: "CheckNumerics"
  input: "Identity_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for Discriminator/discriminator/d_fc1/bias:0 is NaN"
    }
  }
}
node {
  name: "Read_6/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc2/kernel"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_12"
  op: "Identity"
  input: "Read_6/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_6"
  op: "CheckNumerics"
  input: "Identity_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for Discriminator/discriminator/d_fc2/kernel:0 is NaN"
    }
  }
}
node {
  name: "Read_7/ReadVariableOp"
  op: "ReadVariableOp"
  input: "Discriminator/discriminator/d_fc2/bias"
  input: "^output_0_shard_0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_13"
  op: "Identity"
  input: "Read_7/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "CheckNumerics_7"
  op: "CheckNumerics"
  input: "Identity_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Gradient for Discriminator/discriminator/d_fc2/bias:0 is NaN"
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^CheckNumerics"
  input: "^CheckNumerics_1"
  input: "^CheckNumerics_2"
  input: "^CheckNumerics_3"
  input: "^CheckNumerics_4"
  input: "^CheckNumerics_5"
  input: "^CheckNumerics_6"
  input: "^CheckNumerics_7"
}
node {
  name: "ShutdownDistributedTPU"
  op: "ShutdownDistributedTPU"
  device: "/job:tpu_worker/device:TPU_SYSTEM:0"
}
node {
  name: "init"
  op: "NoOp"
  input: "^Discriminator/discriminator/d_fc1/bias/Adam/Assign"
  input: "^Discriminator/discriminator/d_fc1/bias/Adam_1/Assign"
  input: "^Discriminator/discriminator/d_fc1/bias/Assign"
  input: "^Discriminator/discriminator/d_fc1/kernel/Adam/Assign"
  input: "^Discriminator/discriminator/d_fc1/kernel/Adam_1/Assign"
  input: "^Discriminator/discriminator/d_fc1/kernel/Assign"
  input: "^Discriminator/discriminator/d_fc2/bias/Adam/Assign"
  input: "^Discriminator/discriminator/d_fc2/bias/Adam_1/Assign"
  input: "^Discriminator/discriminator/d_fc2/bias/Assign"
  input: "^Discriminator/discriminator/d_fc2/kernel/Adam/Assign"
  input: "^Discriminator/discriminator/d_fc2/kernel/Adam_1/Assign"
  input: "^Discriminator/discriminator/d_fc2/kernel/Assign"
  input: "^Generator/generator/g_fc1/bias/Adam/Assign"
  input: "^Generator/generator/g_fc1/bias/Adam_1/Assign"
  input: "^Generator/generator/g_fc1/bias/Assign"
  input: "^Generator/generator/g_fc1/kernel/Adam/Assign"
  input: "^Generator/generator/g_fc1/kernel/Adam_1/Assign"
  input: "^Generator/generator/g_fc1/kernel/Assign"
  input: "^Generator/generator/g_fc2/bias/Adam/Assign"
  input: "^Generator/generator/g_fc2/bias/Adam_1/Assign"
  input: "^Generator/generator/g_fc2/bias/Assign"
  input: "^Generator/generator/g_fc2/kernel/Adam/Assign"
  input: "^Generator/generator/g_fc2/kernel/Adam_1/Assign"
  input: "^Generator/generator/g_fc2/kernel/Assign"
  input: "^discriminator_train/beta1_power/Assign"
  input: "^discriminator_train/beta2_power/Assign"
  input: "^generator_train/beta1_power/Assign"
  input: "^generator_train/beta2_power/Assign"
  input: "^global_step/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "discriminator_train/beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "discriminator_train/beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "generator_train/beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "generator_train/beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/VarIsInitializedOp_29"
  op: "VarIsInitializedOp"
  input: "tpu_estimator/iterations_per_loop"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/VarIsInitializedOp"
  input: "report_uninitialized_variables/VarIsInitializedOp_1"
  input: "report_uninitialized_variables/VarIsInitializedOp_2"
  input: "report_uninitialized_variables/VarIsInitializedOp_3"
  input: "report_uninitialized_variables/VarIsInitializedOp_4"
  input: "report_uninitialized_variables/VarIsInitializedOp_5"
  input: "report_uninitialized_variables/VarIsInitializedOp_6"
  input: "report_uninitialized_variables/VarIsInitializedOp_7"
  input: "report_uninitialized_variables/VarIsInitializedOp_8"
  input: "report_uninitialized_variables/VarIsInitializedOp_9"
  input: "report_uninitialized_variables/VarIsInitializedOp_10"
  input: "report_uninitialized_variables/VarIsInitializedOp_11"
  input: "report_uninitialized_variables/VarIsInitializedOp_12"
  input: "report_uninitialized_variables/VarIsInitializedOp_13"
  input: "report_uninitialized_variables/VarIsInitializedOp_14"
  input: "report_uninitialized_variables/VarIsInitializedOp_15"
  input: "report_uninitialized_variables/VarIsInitializedOp_16"
  input: "report_uninitialized_variables/VarIsInitializedOp_17"
  input: "report_uninitialized_variables/VarIsInitializedOp_18"
  input: "report_uninitialized_variables/VarIsInitializedOp_19"
  input: "report_uninitialized_variables/VarIsInitializedOp_20"
  input: "report_uninitialized_variables/VarIsInitializedOp_21"
  input: "report_uninitialized_variables/VarIsInitializedOp_22"
  input: "report_uninitialized_variables/VarIsInitializedOp_23"
  input: "report_uninitialized_variables/VarIsInitializedOp_24"
  input: "report_uninitialized_variables/VarIsInitializedOp_25"
  input: "report_uninitialized_variables/VarIsInitializedOp_26"
  input: "report_uninitialized_variables/VarIsInitializedOp_27"
  input: "report_uninitialized_variables/VarIsInitializedOp_28"
  input: "report_uninitialized_variables/VarIsInitializedOp_29"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 30
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 30
          }
        }
        string_val: "global_step"
        string_val: "Generator/generator/g_fc1/kernel"
        string_val: "Generator/generator/g_fc1/bias"
        string_val: "Generator/generator/g_fc2/kernel"
        string_val: "Generator/generator/g_fc2/bias"
        string_val: "Discriminator/discriminator/d_fc1/kernel"
        string_val: "Discriminator/discriminator/d_fc1/bias"
        string_val: "Discriminator/discriminator/d_fc2/kernel"
        string_val: "Discriminator/discriminator/d_fc2/bias"
        string_val: "discriminator_train/beta1_power"
        string_val: "discriminator_train/beta2_power"
        string_val: "Discriminator/discriminator/d_fc1/kernel/Adam"
        string_val: "Discriminator/discriminator/d_fc1/kernel/Adam_1"
        string_val: "Discriminator/discriminator/d_fc1/bias/Adam"
        string_val: "Discriminator/discriminator/d_fc1/bias/Adam_1"
        string_val: "Discriminator/discriminator/d_fc2/kernel/Adam"
        string_val: "Discriminator/discriminator/d_fc2/kernel/Adam_1"
        string_val: "Discriminator/discriminator/d_fc2/bias/Adam"
        string_val: "Discriminator/discriminator/d_fc2/bias/Adam_1"
        string_val: "generator_train/beta1_power"
        string_val: "generator_train/beta2_power"
        string_val: "Generator/generator/g_fc1/kernel/Adam"
        string_val: "Generator/generator/g_fc1/kernel/Adam_1"
        string_val: "Generator/generator/g_fc1/bias/Adam"
        string_val: "Generator/generator/g_fc1/bias/Adam_1"
        string_val: "Generator/generator/g_fc2/kernel/Adam"
        string_val: "Generator/generator/g_fc2/kernel/Adam_1"
        string_val: "Generator/generator/g_fc2/bias/Adam"
        string_val: "Generator/generator/g_fc2/bias/Adam_1"
        string_val: "tpu_estimator/iterations_per_loop"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 30
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 30
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/GatherV2"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc1/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc1/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc2/kernel"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc2/bias"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  op: "VarIsInitializedOp"
  input: "discriminator_train/beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  op: "VarIsInitializedOp"
  input: "discriminator_train/beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  op: "VarIsInitializedOp"
  input: "Discriminator/discriminator/d_fc2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  op: "VarIsInitializedOp"
  input: "generator_train/beta1_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  op: "VarIsInitializedOp"
  input: "generator_train/beta2_power"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc1/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc1/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_23"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc1/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_24"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc1/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_25"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc2/kernel/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_26"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc2/kernel/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_27"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc2/bias/Adam"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/VarIsInitializedOp_28"
  op: "VarIsInitializedOp"
  input: "Generator/generator/g_fc2/bias/Adam_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/VarIsInitializedOp"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_1"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_2"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_3"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_4"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_5"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_6"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_7"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_8"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_9"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_10"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_11"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_12"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_13"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_14"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_15"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_16"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_17"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_18"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_19"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_20"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_21"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_22"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_23"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_24"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_25"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_26"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_27"
  input: "report_uninitialized_variables_1/VarIsInitializedOp_28"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 29
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 29
          }
        }
        string_val: "global_step"
        string_val: "Generator/generator/g_fc1/kernel"
        string_val: "Generator/generator/g_fc1/bias"
        string_val: "Generator/generator/g_fc2/kernel"
        string_val: "Generator/generator/g_fc2/bias"
        string_val: "Discriminator/discriminator/d_fc1/kernel"
        string_val: "Discriminator/discriminator/d_fc1/bias"
        string_val: "Discriminator/discriminator/d_fc2/kernel"
        string_val: "Discriminator/discriminator/d_fc2/bias"
        string_val: "discriminator_train/beta1_power"
        string_val: "discriminator_train/beta2_power"
        string_val: "Discriminator/discriminator/d_fc1/kernel/Adam"
        string_val: "Discriminator/discriminator/d_fc1/kernel/Adam_1"
        string_val: "Discriminator/discriminator/d_fc1/bias/Adam"
        string_val: "Discriminator/discriminator/d_fc1/bias/Adam_1"
        string_val: "Discriminator/discriminator/d_fc2/kernel/Adam"
        string_val: "Discriminator/discriminator/d_fc2/kernel/Adam_1"
        string_val: "Discriminator/discriminator/d_fc2/bias/Adam"
        string_val: "Discriminator/discriminator/d_fc2/bias/Adam_1"
        string_val: "generator_train/beta1_power"
        string_val: "generator_train/beta2_power"
        string_val: "Generator/generator/g_fc1/kernel/Adam"
        string_val: "Generator/generator/g_fc1/kernel/Adam_1"
        string_val: "Generator/generator/g_fc1/bias/Adam"
        string_val: "Generator/generator/g_fc1/bias/Adam_1"
        string_val: "Generator/generator/g_fc2/kernel/Adam"
        string_val: "Generator/generator/g_fc2/kernel/Adam_1"
        string_val: "Generator/generator/g_fc2/bias/Adam"
        string_val: "Generator/generator/g_fc2/bias/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 29
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 29
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 29
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_resources_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/GatherV2"
  input: "report_uninitialized_resources_1/Const"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^tpu_estimator/iterations_per_loop/Assign"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_2"
  op: "NoOp"
  input: "^init_2"
  input: "^init_3"
  input: "^init_all_tables"
}
node {
  name: "Merge_2/MergeSummary"
  op: "MergeSummary"
  input: "loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_8905929af5b54ab58e3a862a6f104929/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 29
          }
        }
        string_val: "Discriminator/discriminator/d_fc1/bias"
        string_val: "Discriminator/discriminator/d_fc1/bias/Adam"
        string_val: "Discriminator/discriminator/d_fc1/bias/Adam_1"
        string_val: "Discriminator/discriminator/d_fc1/kernel"
        string_val: "Discriminator/discriminator/d_fc1/kernel/Adam"
        string_val: "Discriminator/discriminator/d_fc1/kernel/Adam_1"
        string_val: "Discriminator/discriminator/d_fc2/bias"
        string_val: "Discriminator/discriminator/d_fc2/bias/Adam"
        string_val: "Discriminator/discriminator/d_fc2/bias/Adam_1"
        string_val: "Discriminator/discriminator/d_fc2/kernel"
        string_val: "Discriminator/discriminator/d_fc2/kernel/Adam"
        string_val: "Discriminator/discriminator/d_fc2/kernel/Adam_1"
        string_val: "Generator/generator/g_fc1/bias"
        string_val: "Generator/generator/g_fc1/bias/Adam"
        string_val: "Generator/generator/g_fc1/bias/Adam_1"
        string_val: "Generator/generator/g_fc1/kernel"
        string_val: "Generator/generator/g_fc1/kernel/Adam"
        string_val: "Generator/generator/g_fc1/kernel/Adam_1"
        string_val: "Generator/generator/g_fc2/bias"
        string_val: "Generator/generator/g_fc2/bias/Adam"
        string_val: "Generator/generator/g_fc2/bias/Adam_1"
        string_val: "Generator/generator/g_fc2/kernel"
        string_val: "Generator/generator/g_fc2/kernel/Adam"
        string_val: "Generator/generator/g_fc2/kernel/Adam_1"
        string_val: "discriminator_train/beta1_power"
        string_val: "discriminator_train/beta2_power"
        string_val: "generator_train/beta1_power"
        string_val: "generator_train/beta2_power"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 29
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "Discriminator/discriminator/d_fc1/bias/Read/ReadVariableOp"
  input: "Discriminator/discriminator/d_fc1/bias/Adam/Read/ReadVariableOp"
  input: "Discriminator/discriminator/d_fc1/bias/Adam_1/Read/ReadVariableOp"
  input: "Discriminator/discriminator/d_fc1/kernel/Read/ReadVariableOp"
  input: "Discriminator/discriminator/d_fc1/kernel/Adam/Read/ReadVariableOp"
  input: "Discriminator/discriminator/d_fc1/kernel/Adam_1/Read/ReadVariableOp"
  input: "Discriminator/discriminator/d_fc2/bias/Read/ReadVariableOp"
  input: "Discriminator/discriminator/d_fc2/bias/Adam/Read/ReadVariableOp"
  input: "Discriminator/discriminator/d_fc2/bias/Adam_1/Read/ReadVariableOp"
  input: "Discriminator/discriminator/d_fc2/kernel/Read/ReadVariableOp"
  input: "Discriminator/discriminator/d_fc2/kernel/Adam/Read/ReadVariableOp"
  input: "Discriminator/discriminator/d_fc2/kernel/Adam_1/Read/ReadVariableOp"
  input: "Generator/generator/g_fc1/bias/Read/ReadVariableOp"
  input: "Generator/generator/g_fc1/bias/Adam/Read/ReadVariableOp"
  input: "Generator/generator/g_fc1/bias/Adam_1/Read/ReadVariableOp"
  input: "Generator/generator/g_fc1/kernel/Read/ReadVariableOp"
  input: "Generator/generator/g_fc1/kernel/Adam/Read/ReadVariableOp"
  input: "Generator/generator/g_fc1/kernel/Adam_1/Read/ReadVariableOp"
  input: "Generator/generator/g_fc2/bias/Read/ReadVariableOp"
  input: "Generator/generator/g_fc2/bias/Adam/Read/ReadVariableOp"
  input: "Generator/generator/g_fc2/bias/Adam_1/Read/ReadVariableOp"
  input: "Generator/generator/g_fc2/kernel/Read/ReadVariableOp"
  input: "Generator/generator/g_fc2/kernel/Adam/Read/ReadVariableOp"
  input: "Generator/generator/g_fc2/kernel/Adam_1/Read/ReadVariableOp"
  input: "discriminator_train/beta1_power/Read/ReadVariableOp"
  input: "discriminator_train/beta2_power/Read/ReadVariableOp"
  input: "generator_train/beta1_power/Read/ReadVariableOp"
  input: "generator_train/beta2_power/Read/ReadVariableOp"
  input: "global_step/Read/ReadVariableOp"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/MergeV2Checkpoints"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 29
          }
        }
        string_val: "Discriminator/discriminator/d_fc1/bias"
        string_val: "Discriminator/discriminator/d_fc1/bias/Adam"
        string_val: "Discriminator/discriminator/d_fc1/bias/Adam_1"
        string_val: "Discriminator/discriminator/d_fc1/kernel"
        string_val: "Discriminator/discriminator/d_fc1/kernel/Adam"
        string_val: "Discriminator/discriminator/d_fc1/kernel/Adam_1"
        string_val: "Discriminator/discriminator/d_fc2/bias"
        string_val: "Discriminator/discriminator/d_fc2/bias/Adam"
        string_val: "Discriminator/discriminator/d_fc2/bias/Adam_1"
        string_val: "Discriminator/discriminator/d_fc2/kernel"
        string_val: "Discriminator/discriminator/d_fc2/kernel/Adam"
        string_val: "Discriminator/discriminator/d_fc2/kernel/Adam_1"
        string_val: "Generator/generator/g_fc1/bias"
        string_val: "Generator/generator/g_fc1/bias/Adam"
        string_val: "Generator/generator/g_fc1/bias/Adam_1"
        string_val: "Generator/generator/g_fc1/kernel"
        string_val: "Generator/generator/g_fc1/kernel/Adam"
        string_val: "Generator/generator/g_fc1/kernel/Adam_1"
        string_val: "Generator/generator/g_fc2/bias"
        string_val: "Generator/generator/g_fc2/bias/Adam"
        string_val: "Generator/generator/g_fc2/bias/Adam_1"
        string_val: "Generator/generator/g_fc2/kernel"
        string_val: "Generator/generator/g_fc2/kernel/Adam"
        string_val: "Generator/generator/g_fc2/kernel/Adam_1"
        string_val: "discriminator_train/beta1_power"
        string_val: "discriminator_train/beta2_power"
        string_val: "generator_train/beta1_power"
        string_val: "generator_train/beta2_power"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 29
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 29
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "Discriminator/discriminator/d_fc1/bias"
  input: "save/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "Discriminator/discriminator/d_fc1/bias/Adam"
  input: "save/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "Discriminator/discriminator/d_fc1/bias/Adam_1"
  input: "save/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "Discriminator/discriminator/d_fc1/kernel"
  input: "save/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "Discriminator/discriminator/d_fc1/kernel/Adam"
  input: "save/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "Discriminator/discriminator/d_fc1/kernel/Adam_1"
  input: "save/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_7"
  op: "Identity"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "Discriminator/discriminator/d_fc2/bias"
  input: "save/Identity_7"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_8"
  op: "Identity"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_7"
  op: "AssignVariableOp"
  input: "Discriminator/discriminator/d_fc2/bias/Adam"
  input: "save/Identity_8"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_9"
  op: "Identity"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_8"
  op: "AssignVariableOp"
  input: "Discriminator/discriminator/d_fc2/bias/Adam_1"
  input: "save/Identity_9"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_10"
  op: "Identity"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_9"
  op: "AssignVariableOp"
  input: "Discriminator/discriminator/d_fc2/kernel"
  input: "save/Identity_10"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_11"
  op: "Identity"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_10"
  op: "AssignVariableOp"
  input: "Discriminator/discriminator/d_fc2/kernel/Adam"
  input: "save/Identity_11"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_12"
  op: "Identity"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_11"
  op: "AssignVariableOp"
  input: "Discriminator/discriminator/d_fc2/kernel/Adam_1"
  input: "save/Identity_12"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_13"
  op: "Identity"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_12"
  op: "AssignVariableOp"
  input: "Generator/generator/g_fc1/bias"
  input: "save/Identity_13"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_14"
  op: "Identity"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_13"
  op: "AssignVariableOp"
  input: "Generator/generator/g_fc1/bias/Adam"
  input: "save/Identity_14"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_15"
  op: "Identity"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_14"
  op: "AssignVariableOp"
  input: "Generator/generator/g_fc1/bias/Adam_1"
  input: "save/Identity_15"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_16"
  op: "Identity"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_15"
  op: "AssignVariableOp"
  input: "Generator/generator/g_fc1/kernel"
  input: "save/Identity_16"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_17"
  op: "Identity"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_16"
  op: "AssignVariableOp"
  input: "Generator/generator/g_fc1/kernel/Adam"
  input: "save/Identity_17"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_18"
  op: "Identity"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_17"
  op: "AssignVariableOp"
  input: "Generator/generator/g_fc1/kernel/Adam_1"
  input: "save/Identity_18"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_19"
  op: "Identity"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_18"
  op: "AssignVariableOp"
  input: "Generator/generator/g_fc2/bias"
  input: "save/Identity_19"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_20"
  op: "Identity"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_19"
  op: "AssignVariableOp"
  input: "Generator/generator/g_fc2/bias/Adam"
  input: "save/Identity_20"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_21"
  op: "Identity"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_20"
  op: "AssignVariableOp"
  input: "Generator/generator/g_fc2/bias/Adam_1"
  input: "save/Identity_21"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_22"
  op: "Identity"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_21"
  op: "AssignVariableOp"
  input: "Generator/generator/g_fc2/kernel"
  input: "save/Identity_22"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_23"
  op: "Identity"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_22"
  op: "AssignVariableOp"
  input: "Generator/generator/g_fc2/kernel/Adam"
  input: "save/Identity_23"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_24"
  op: "Identity"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_23"
  op: "AssignVariableOp"
  input: "Generator/generator/g_fc2/kernel/Adam_1"
  input: "save/Identity_24"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_25"
  op: "Identity"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_24"
  op: "AssignVariableOp"
  input: "discriminator_train/beta1_power"
  input: "save/Identity_25"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_26"
  op: "Identity"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_25"
  op: "AssignVariableOp"
  input: "discriminator_train/beta2_power"
  input: "save/Identity_26"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_27"
  op: "Identity"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_26"
  op: "AssignVariableOp"
  input: "generator_train/beta1_power"
  input: "save/Identity_27"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_28"
  op: "Identity"
  input: "save/RestoreV2:27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_27"
  op: "AssignVariableOp"
  input: "generator_train/beta2_power"
  input: "save/Identity_28"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_29"
  op: "Identity"
  input: "save/RestoreV2:28"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "save/AssignVariableOp_28"
  op: "AssignVariableOp"
  input: "global_step"
  input: "save/Identity_29"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_10"
  input: "^save/AssignVariableOp_11"
  input: "^save/AssignVariableOp_12"
  input: "^save/AssignVariableOp_13"
  input: "^save/AssignVariableOp_14"
  input: "^save/AssignVariableOp_15"
  input: "^save/AssignVariableOp_16"
  input: "^save/AssignVariableOp_17"
  input: "^save/AssignVariableOp_18"
  input: "^save/AssignVariableOp_19"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_20"
  input: "^save/AssignVariableOp_21"
  input: "^save/AssignVariableOp_22"
  input: "^save/AssignVariableOp_23"
  input: "^save/AssignVariableOp_24"
  input: "^save/AssignVariableOp_25"
  input: "^save/AssignVariableOp_26"
  input: "^save/AssignVariableOp_27"
  input: "^save/AssignVariableOp_28"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_6"
  input: "^save/AssignVariableOp_7"
  input: "^save/AssignVariableOp_8"
  input: "^save/AssignVariableOp_9"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
library {
  function {
    signature {
      name: "Dataset_map_parser_85177"
      input_arg {
        name: "arg0"
        type: DT_STRING
      }
      output_arg {
        name: "sub"
        type: DT_FLOAT
      }
      description: "Wrapper for passing nested structures to and from tf.data functions."
    }
    node_def {
      name: "ParseSingleExample/Const"
      op: "Const"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "ParseSingleExample/Const_1"
      op: "Const"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
              dim {
              }
            }
          }
        }
      }
    }
    node_def {
      name: "ParseSingleExample/ParseSingleExample"
      op: "ParseSingleExample"
      input: "arg0"
      input: "ParseSingleExample/Const:output:0"
      input: "ParseSingleExample/Const_1:output:0"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "Tdense"
        value {
          list {
            type: DT_INT64
            type: DT_INT64
          }
        }
      }
      attr {
        key: "dense_keys"
        value {
          list {
            s: "image"
            s: "label"
          }
        }
      }
      attr {
        key: "dense_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
              dim {
                size: 3
              }
            }
            shape {
            }
          }
        }
      }
      attr {
        key: "num_sparse"
        value {
          i: 0
        }
      }
      attr {
        key: "sparse_keys"
        value {
          list {
          }
        }
      }
      attr {
        key: "sparse_types"
        value {
          list {
          }
        }
      }
    }
    node_def {
      name: "Cast"
      op: "Cast"
      input: "ParseSingleExample/ParseSingleExample:dense_values:0"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "DstT"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "SrcT"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "Truncate"
        value {
          b: false
        }
      }
    }
    node_def {
      name: "mul/y"
      op: "Const"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 0.007843137718737125
          }
        }
      }
    }
    node_def {
      name: "mul"
      op: "Mul"
      input: "Cast:y:0"
      input: "mul/y:output:0"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sub/y"
      op: "Const"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 1.0
          }
        }
      }
    }
    node_def {
      name: "sub_0"
      op: "Sub"
      input: "mul:z:0"
      input: "sub/y:output:0"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    ret {
      key: "sub"
      value: "sub_0:z:0"
    }
  }
  function {
    signature {
      name: "Dataset_flat_map_read_one_file_85171"
      input_arg {
        name: "arg0"
        type: DT_STRING
      }
      output_arg {
        name: "tfrecorddataset"
        type: DT_VARIANT
      }
      description: "Wrapper for passing nested structures to and from tf.data functions."
      is_stateful: true
    }
    node_def {
      name: "compression_type"
      op: "Const"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
            }
            string_val: ""
          }
        }
      }
    }
    node_def {
      name: "buffer_size"
      op: "Const"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 262144
          }
        }
      }
    }
    node_def {
      name: "TFRecordDataset"
      op: "TFRecordDataset"
      input: "arg0"
      input: "compression_type:output:0"
      input: "buffer_size:output:0"
      device: "/job:tpu_worker/task:0/device:CPU:0"
    }
    ret {
      key: "tfrecorddataset"
      value: "TFRecordDataset:handle:0"
    }
  }
  function {
    signature {
      name: "_make_dataset_Y2kVwh2aTmE"
      output_arg {
        name: "modeldataset"
        type: DT_VARIANT
      }
      description: "Factory function for a dataset."
      is_stateful: true
    }
    node_def {
      name: "optimizations"
      op: "Const"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 3
              }
            }
            string_val: "map_and_batch_fusion"
            string_val: "noop_elimination"
            string_val: "shuffle_and_repeat_fusion"
          }
        }
      }
    }
    node_def {
      name: "TensorSliceDataset/input_pipeline_task0/Const"
      op: "Const"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_STRING
            tensor_shape {
              dim {
                size: 2
              }
            }
            string_val: "gs://victoratpl-gan-tpu/tfrecords/train-1-of-2.tfrecords"
            string_val: "gs://victoratpl-gan-tpu/tfrecords/train-2-of-2.tfrecords"
          }
        }
      }
    }
    node_def {
      name: "TensorSliceDataset/input_pipeline_task0/flat_filenames/shape"
      op: "Const"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "TensorSliceDataset/input_pipeline_task0/flat_filenames"
      op: "Reshape"
      input: "TensorSliceDataset/input_pipeline_task0/Const:output:0"
      input: "TensorSliceDataset/input_pipeline_task0/flat_filenames/shape:output:0"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "T"
        value {
          type: DT_STRING
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "TensorSliceDataset"
      op: "TensorSliceDataset"
      input: "TensorSliceDataset/input_pipeline_task0/flat_filenames:output:0"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "Toutput_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
    }
    node_def {
      name: "FlatMapDataset"
      op: "FlatMapDataset"
      input: "TensorSliceDataset:handle:0"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "Dataset_flat_map_read_one_file_85171"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_STRING
          }
        }
      }
    }
    node_def {
      name: "ParallelMapDataset/input_pipeline_task0/num_parallel_calls"
      op: "Const"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: -1
          }
        }
      }
    }
    node_def {
      name: "ParallelMapDataset"
      op: "ParallelMapDataset"
      input: "FlatMapDataset:handle:0"
      input: "ParallelMapDataset/input_pipeline_task0/num_parallel_calls:output:0"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "Targuments"
        value {
          list {
          }
        }
      }
      attr {
        key: "f"
        value {
          func {
            name: "Dataset_map_parser_85177"
          }
        }
      }
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "preserve_cardinality"
        value {
          b: false
        }
      }
      attr {
        key: "sloppy"
        value {
          b: false
        }
      }
      attr {
        key: "use_inter_op_parallelism"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "RepeatDataset/input_pipeline_task0/count"
      op: "Const"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "RepeatDataset"
      op: "RepeatDataset"
      input: "ParallelMapDataset:handle:0"
      input: "RepeatDataset/input_pipeline_task0/count:output:0"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/input_pipeline_task0/buffer_size"
      op: "Const"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 10000
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/input_pipeline_task0/seed"
      op: "Const"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset/input_pipeline_task0/seed2"
      op: "Const"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 0
          }
        }
      }
    }
    node_def {
      name: "ShuffleDataset"
      op: "ShuffleDataset"
      input: "RepeatDataset:handle:0"
      input: "ShuffleDataset/input_pipeline_task0/buffer_size:output:0"
      input: "ShuffleDataset/input_pipeline_task0/seed:output:0"
      input: "ShuffleDataset/input_pipeline_task0/seed2:output:0"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 32
              }
              dim {
                size: 32
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
      attr {
        key: "reshuffle_each_iteration"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "BatchDatasetV2/input_pipeline_task0/batch_size"
      op: "Const"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: 2048
          }
        }
      }
    }
    node_def {
      name: "BatchDatasetV2/input_pipeline_task0/drop_remainder"
      op: "Const"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_BOOL
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_BOOL
            tensor_shape {
            }
            bool_val: true
          }
        }
      }
    }
    node_def {
      name: "BatchDatasetV2"
      op: "BatchDatasetV2"
      input: "ShuffleDataset:handle:0"
      input: "BatchDatasetV2/input_pipeline_task0/batch_size:output:0"
      input: "BatchDatasetV2/input_pipeline_task0/drop_remainder:output:0"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
              dim {
                size: 32
              }
              dim {
                size: 32
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node_def {
      name: "PrefetchDataset/input_pipeline_task0/buffer_size_1"
      op: "Const"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_INT64
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT64
            tensor_shape {
            }
            int64_val: -1
          }
        }
      }
    }
    node_def {
      name: "PrefetchDataset"
      op: "PrefetchDataset"
      input: "BatchDatasetV2:handle:0"
      input: "PrefetchDataset/input_pipeline_task0/buffer_size_1:output:0"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
              dim {
                size: 32
              }
              dim {
                size: 32
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node_def {
      name: "OptimizeDataset"
      op: "OptimizeDataset"
      input: "PrefetchDataset:handle:0"
      input: "optimizations:output:0"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
              dim {
                size: 32
              }
              dim {
                size: 32
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    node_def {
      name: "ModelDataset"
      op: "ModelDataset"
      input: "OptimizeDataset:handle:0"
      device: "/job:tpu_worker/task:0/device:CPU:0"
      attr {
        key: "output_shapes"
        value {
          list {
            shape {
              dim {
                size: 2048
              }
              dim {
                size: 32
              }
              dim {
                size: 32
              }
              dim {
                size: 3
              }
            }
          }
        }
      }
      attr {
        key: "output_types"
        value {
          list {
            type: DT_FLOAT
          }
        }
      }
    }
    ret {
      key: "modeldataset"
      value: "ModelDataset:handle:0"
    }
  }
}
versions {
  producer: 27
  min_consumer: 12
}
